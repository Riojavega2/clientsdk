
package org.cerberus.test;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;

import org.objectweb.asm.AnnotationVisitor;
import org.objectweb.asm.ClassWriter;
import org.objectweb.asm.FieldVisitor;
import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.Type;

public class TestRunnerAsm implements Opcodes{

	public static void main(String[] args) throws Exception {
		
		String path = args[0];
		String ip = args[1];
		String mainActivity = args[2];
		String packageName = args[3];

ClassWriter cw = new ClassWriter(0);
FieldVisitor fv;
MethodVisitor mv;
AnnotationVisitor av0;





cw.visit(V1_6, ACC_PUBLIC + ACC_SUPER, "org/cerberus/test/CerberusTestRunner", null, "android/test/ActivityInstrumentationTestCase2", null);

cw.visitSource("CerberusTestRunner.java", null);

cw.visitInnerClass("android/content/pm/PackageManager$NameNotFoundException", "android/content/pm/PackageManager", "NameNotFoundException", ACC_PUBLIC + ACC_STATIC);

cw.visitInnerClass("android/graphics/Bitmap$CompressFormat", "android/graphics/Bitmap", "CompressFormat", ACC_PUBLIC + ACC_FINAL + ACC_STATIC + ACC_ENUM);

cw.visitInnerClass("org/cerberus/scenario/MotionCollectionManager$MotionAddListener", "org/cerberus/scenario/MotionCollectionManager", "MotionAddListener", ACC_PUBLIC + ACC_STATIC + ACC_ABSTRACT + ACC_INTERFACE);

cw.visitInnerClass("org/cerberus/test/CerberusTestRunner$1", null, null, 0);

cw.visitInnerClass("org/cerberus/test/CerberusTestRunner$2", null, null, 0);

{
fv = cw.visitField(ACC_PRIVATE + ACC_FINAL + ACC_STATIC, "SERVER_IP", "Ljava/lang/String;", null, ip);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PRIVATE + ACC_FINAL + ACC_STATIC, "SERVER_PORT", "Ljava/lang/Integer;", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PRIVATE + ACC_FINAL + ACC_STATIC, "LAUNCHER_ACTIVITY_CLASSNAME", "Ljava/lang/String;", null, mainActivity);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PRIVATE + ACC_FINAL + ACC_STATIC, "PROTOCAL", "Ljava/lang/String;", null, "http");
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PRIVATE + ACC_STATIC, "launcherActivityClass", "Ljava/lang/Class;", "Ljava/lang/Class<*>;", null);
fv.visitEnd();
}
{
fv = cw.visitField(0, "solo", "Lcom/robotium/solo/Solo;", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(0, "version", "Ljava/lang/String;", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(0, "startDate", "Ljava/lang/Long;", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(0, "totalReportId", "Ljava/lang/Integer;", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_STATIC, "serial", "Ljava/lang/String;", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(0, "totalScenarioId", "Ljava/lang/Integer;", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(0, "scenarioJsonArr", "Lcom/google/gson/JsonArray;", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PRIVATE, "isFirst", "Z", null, null);
fv.visitEnd();
}
{
mv = cw.visitMethod(ACC_STATIC, "<clinit>", "()V", null, null);
mv.visitCode();
Label l0 = new Label();
Label l1 = new Label();
Label l2 = new Label();
mv.visitTryCatchBlock(l0, l1, l2, "java/lang/ClassNotFoundException");
Label l3 = new Label();
mv.visitLabel(l3);
mv.visitLineNumber(73, l3);
mv.visitIntInsn(SIPUSH, 8080);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "valueOf", "(I)Ljava/lang/Integer;");
mv.visitFieldInsn(PUTSTATIC, "org/cerberus/test/CerberusTestRunner", "SERVER_PORT", "Ljava/lang/Integer;");
mv.visitLabel(l0);
mv.visitLineNumber(81, l0);
mv.visitLdcInsn(mainActivity);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Class", "forName", "(Ljava/lang/String;)Ljava/lang/Class;");
mv.visitFieldInsn(PUTSTATIC, "org/cerberus/test/CerberusTestRunner", "launcherActivityClass", "Ljava/lang/Class;");
mv.visitLabel(l1);
mv.visitLineNumber(82, l1);
Label l4 = new Label();
mv.visitJumpInsn(GOTO, l4);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/ClassNotFoundException"});
mv.visitVarInsn(ASTORE, 0);
Label l5 = new Label();
mv.visitLabel(l5);
mv.visitLineNumber(83, l5);
mv.visitTypeInsn(NEW, "java/lang/RuntimeException");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKESPECIAL, "java/lang/RuntimeException", "<init>", "(Ljava/lang/Throwable;)V");
mv.visitInsn(ATHROW);
mv.visitLabel(l4);
mv.visitLineNumber(94, l4);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitLdcInsn("1.0");
mv.visitFieldInsn(PUTSTATIC, "org/cerberus/test/CerberusTestRunner", "serial", "Ljava/lang/String;");
mv.visitInsn(RETURN);
mv.visitLocalVariable("cnfException", "Ljava/lang/ClassNotFoundException;", null, l5, l4, 0);
mv.visitMaxs(3, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "<init>", "()V", null, null);
mv.visitCode();
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitLineNumber(102, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETSTATIC, "org/cerberus/test/CerberusTestRunner", "launcherActivityClass", "Ljava/lang/Class;");
mv.visitMethodInsn(INVOKESPECIAL, "android/test/ActivityInstrumentationTestCase2", "<init>", "(Ljava/lang/Class;)V");
Label l1 = new Label();
mv.visitLabel(l1);
mv.visitLineNumber(93, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitInsn(ICONST_1);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "valueOf", "(I)Ljava/lang/Integer;");
mv.visitFieldInsn(PUTFIELD, "org/cerberus/test/CerberusTestRunner", "totalReportId", "Ljava/lang/Integer;");
Label l2 = new Label();
mv.visitLabel(l2);
mv.visitLineNumber(95, l2);
mv.visitVarInsn(ALOAD, 0);
mv.visitInsn(ICONST_1);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "valueOf", "(I)Ljava/lang/Integer;");
mv.visitFieldInsn(PUTFIELD, "org/cerberus/test/CerberusTestRunner", "totalScenarioId", "Ljava/lang/Integer;");
Label l3 = new Label();
mv.visitLabel(l3);
mv.visitLineNumber(98, l3);
mv.visitVarInsn(ALOAD, 0);
mv.visitInsn(ICONST_1);
mv.visitFieldInsn(PUTFIELD, "org/cerberus/test/CerberusTestRunner", "isFirst", "Z");
Label l4 = new Label();
mv.visitLabel(l4);
mv.visitLineNumber(103, l4);
mv.visitInsn(RETURN);
Label l5 = new Label();
mv.visitLabel(l5);
mv.visitLocalVariable("this", "Lorg/cerberus/test/CerberusTestRunner;", null, l0, l5, 0);
mv.visitMaxs(2, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "setUp", "()V", null, new String[] { "java/lang/Exception" });
mv.visitCode();
Label l0 = new Label();
Label l1 = new Label();
Label l2 = new Label();
mv.visitTryCatchBlock(l0, l1, l2, "android/content/pm/PackageManager$NameNotFoundException");
Label l3 = new Label();
Label l4 = new Label();
Label l5 = new Label();
mv.visitTryCatchBlock(l3, l4, l5, "java/lang/Exception");
Label l6 = new Label();
Label l7 = new Label();
Label l8 = new Label();
mv.visitTryCatchBlock(l6, l7, l8, "java/lang/Exception");
Label l9 = new Label();
mv.visitLabel(l9);
mv.visitLineNumber(111, l9);
mv.visitLdcInsn(ip);
mv.visitFieldInsn(PUTSTATIC, "org/cerberus/index/CerberusAPI", "SERVER_IP", "Ljava/lang/String;");
Label l10 = new Label();
mv.visitLabel(l10);
mv.visitLineNumber(112, l10);
mv.visitFieldInsn(GETSTATIC, "org/cerberus/test/CerberusTestRunner", "SERVER_PORT", "Ljava/lang/Integer;");
mv.visitFieldInsn(PUTSTATIC, "org/cerberus/index/CerberusAPI", "SERVER_PORT", "Ljava/lang/Integer;");
Label l11 = new Label();
mv.visitLabel(l11);
mv.visitLineNumber(113, l11);
mv.visitLdcInsn(mainActivity);
mv.visitFieldInsn(PUTSTATIC, "org/cerberus/index/CerberusAPI", "LAUNCHER_ACTIVITY_CLASSNAME", "Ljava/lang/String;");
Label l12 = new Label();
mv.visitLabel(l12);
mv.visitLineNumber(114, l12);
mv.visitLdcInsn("http");
mv.visitFieldInsn(PUTSTATIC, "org/cerberus/index/CerberusAPI", "PROTOCAL", "Ljava/lang/String;");
Label l13 = new Label();
mv.visitLabel(l13);
mv.visitLineNumber(115, l13);
mv.visitInsn(ICONST_1);
mv.visitFieldInsn(PUTSTATIC, "org/cerberus/index/CerberusAPI", "isTestRunning", "Z");
Label l14 = new Label();
mv.visitLabel(l14);
mv.visitLineNumber(117, l14);
mv.visitVarInsn(ALOAD, 0);
mv.visitTypeInsn(NEW, "com/robotium/solo/Solo");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "org/cerberus/test/CerberusTestRunner", "getInstrumentation", "()Landroid/app/Instrumentation;");
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "org/cerberus/test/CerberusTestRunner", "getActivity", "()Landroid/app/Activity;");
mv.visitMethodInsn(INVOKESPECIAL, "com/robotium/solo/Solo", "<init>", "(Landroid/app/Instrumentation;Landroid/app/Activity;)V");
mv.visitFieldInsn(PUTFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitLabel(l0);
mv.visitLineNumber(120, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "org/cerberus/test/CerberusTestRunner", "getActivity", "()Landroid/app/Activity;");
mv.visitMethodInsn(INVOKEVIRTUAL, "android/app/Activity", "getPackageManager", "()Landroid/content/pm/PackageManager;");
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "org/cerberus/test/CerberusTestRunner", "getActivity", "()Landroid/app/Activity;");
mv.visitMethodInsn(INVOKEVIRTUAL, "android/app/Activity", "getPackageName", "()Ljava/lang/String;");
mv.visitInsn(ICONST_0);
mv.visitMethodInsn(INVOKEVIRTUAL, "android/content/pm/PackageManager", "getPackageInfo", "(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;");
mv.visitVarInsn(ASTORE, 1);
Label l15 = new Label();
mv.visitLabel(l15);
mv.visitLineNumber(121, l15);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "android/content/pm/PackageInfo", "versionName", "Ljava/lang/String;");
mv.visitFieldInsn(PUTFIELD, "org/cerberus/test/CerberusTestRunner", "version", "Ljava/lang/String;");
Label l16 = new Label();
mv.visitLabel(l16);
mv.visitLineNumber(122, l16);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "android/content/pm/PackageInfo", "versionName", "Ljava/lang/String;");
mv.visitFieldInsn(PUTSTATIC, "org/cerberus/index/CerberusAPI", "version", "Ljava/lang/String;");
mv.visitLabel(l1);
mv.visitLineNumber(123, l1);
Label l17 = new Label();
mv.visitJumpInsn(GOTO, l17);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"android/content/pm/PackageManager$NameNotFoundException"});
mv.visitVarInsn(ASTORE, 1);
mv.visitLabel(l17);
mv.visitLineNumber(125, l17);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/System", "currentTimeMillis", "()J");
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Long", "valueOf", "(J)Ljava/lang/Long;");
mv.visitFieldInsn(PUTFIELD, "org/cerberus/test/CerberusTestRunner", "startDate", "Ljava/lang/Long;");
Label l18 = new Label();
mv.visitLabel(l18);
mv.visitLineNumber(126, l18);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "startDate", "Ljava/lang/Long;");
mv.visitFieldInsn(PUTSTATIC, "org/cerberus/index/CerberusAPI", "startDate", "Ljava/lang/Long;");
mv.visitLabel(l3);
mv.visitLineNumber(129, l3);
mv.visitLdcInsn("android.os.SystemProperties");
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Class", "forName", "(Ljava/lang/String;)Ljava/lang/Class;");
mv.visitVarInsn(ASTORE, 1);
Label l19 = new Label();
mv.visitLabel(l19);
mv.visitLineNumber(130, l19);
mv.visitVarInsn(ALOAD, 1);
mv.visitLdcInsn("get");
mv.visitInsn(ICONST_1);
mv.visitTypeInsn(ANEWARRAY, "java/lang/Class");
mv.visitInsn(DUP);
mv.visitInsn(ICONST_0);
mv.visitLdcInsn(Type.getType("Ljava/lang/String;"));
mv.visitInsn(AASTORE);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;");
mv.visitVarInsn(ASTORE, 2);
Label l20 = new Label();
mv.visitLabel(l20);
mv.visitLineNumber(131, l20);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitInsn(ICONST_1);
mv.visitTypeInsn(ANEWARRAY, "java/lang/Object");
mv.visitInsn(DUP);
mv.visitInsn(ICONST_0);
mv.visitLdcInsn("ro.serialno");
mv.visitInsn(AASTORE);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Method", "invoke", "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitTypeInsn(CHECKCAST, "java/lang/String");
mv.visitFieldInsn(PUTSTATIC, "org/cerberus/test/CerberusTestRunner", "serial", "Ljava/lang/String;");
Label l21 = new Label();
mv.visitLabel(l21);
mv.visitLineNumber(132, l21);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitInsn(ICONST_1);
mv.visitTypeInsn(ANEWARRAY, "java/lang/Object");
mv.visitInsn(DUP);
mv.visitInsn(ICONST_0);
mv.visitLdcInsn("ro.serialno");
mv.visitInsn(AASTORE);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Method", "invoke", "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitTypeInsn(CHECKCAST, "java/lang/String");
mv.visitFieldInsn(PUTSTATIC, "org/cerberus/index/CerberusAPI", "serial", "Ljava/lang/String;");
mv.visitLabel(l4);
mv.visitLineNumber(133, l4);
Label l22 = new Label();
mv.visitJumpInsn(GOTO, l22);
mv.visitLabel(l5);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Exception"});
mv.visitVarInsn(ASTORE, 1);
Label l23 = new Label();
mv.visitLabel(l23);
mv.visitLineNumber(134, l23);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Exception", "printStackTrace", "()V");
mv.visitLabel(l22);
mv.visitLineNumber(143, l22);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
mv.visitInsn(DUP);
mv.visitLdcInsn("http://"+ip+":");
mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "(Ljava/lang/String;)V");
mv.visitFieldInsn(GETSTATIC, "org/cerberus/test/CerberusTestRunner", "SERVER_PORT", "Ljava/lang/Integer;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;");
mv.visitLdcInsn("/testSvr/ScenarioInfoServlet");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;");
mv.visitVarInsn(ASTORE, 1);
Label l24 = new Label();
mv.visitLabel(l24);
mv.visitLineNumber(144, l24);
mv.visitTypeInsn(NEW, "org/apache/http/impl/client/DefaultHttpClient");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "org/apache/http/impl/client/DefaultHttpClient", "<init>", "()V");
mv.visitVarInsn(ASTORE, 2);
Label l25 = new Label();
mv.visitLabel(l25);
mv.visitLineNumber(146, l25);
mv.visitTypeInsn(NEW, "java/util/ArrayList");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "java/util/ArrayList", "<init>", "()V");
Label l26 = new Label();
mv.visitLabel(l26);
mv.visitLineNumber(145, l26);
mv.visitVarInsn(ASTORE, 3);
Label l27 = new Label();
mv.visitLabel(l27);
mv.visitLineNumber(147, l27);
mv.visitVarInsn(ALOAD, 3);
mv.visitTypeInsn(NEW, "org/apache/http/message/BasicNameValuePair");
mv.visitInsn(DUP);
mv.visitLdcInsn("deviceName");
mv.visitFieldInsn(GETSTATIC, "org/cerberus/test/CerberusTestRunner", "serial", "Ljava/lang/String;");
mv.visitMethodInsn(INVOKESPECIAL, "org/apache/http/message/BasicNameValuePair", "<init>", "(Ljava/lang/String;Ljava/lang/String;)V");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/ArrayList", "add", "(Ljava/lang/Object;)Z");
mv.visitInsn(POP);
Label l28 = new Label();
mv.visitLabel(l28);
mv.visitLineNumber(150, l28);
mv.visitTypeInsn(NEW, "org/apache/http/client/methods/HttpPost");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKESPECIAL, "org/apache/http/client/methods/HttpPost", "<init>", "(Ljava/lang/String;)V");
mv.visitVarInsn(ASTORE, 4);
Label l29 = new Label();
mv.visitLabel(l29);
mv.visitLineNumber(152, l29);
mv.visitTypeInsn(NEW, "org/apache/http/client/entity/UrlEncodedFormEntity");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 3);
mv.visitLdcInsn("EUC-KR");
mv.visitMethodInsn(INVOKESPECIAL, "org/apache/http/client/entity/UrlEncodedFormEntity", "<init>", "(Ljava/util/List;Ljava/lang/String;)V");
Label l30 = new Label();
mv.visitLabel(l30);
mv.visitLineNumber(151, l30);
mv.visitVarInsn(ASTORE, 5);
Label l31 = new Label();
mv.visitLabel(l31);
mv.visitLineNumber(154, l31);
mv.visitVarInsn(ALOAD, 4);
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKEVIRTUAL, "org/apache/http/client/methods/HttpPost", "setEntity", "(Lorg/apache/http/HttpEntity;)V");
Label l32 = new Label();
mv.visitLabel(l32);
mv.visitLineNumber(156, l32);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 4);
mv.visitMethodInsn(INVOKEINTERFACE, "org/apache/http/client/HttpClient", "execute", "(Lorg/apache/http/client/methods/HttpUriRequest;)Lorg/apache/http/HttpResponse;");
mv.visitVarInsn(ASTORE, 6);
Label l33 = new Label();
mv.visitLabel(l33);
mv.visitLineNumber(158, l33);
mv.visitLdcInsn("");
mv.visitVarInsn(ASTORE, 7);
mv.visitLabel(l6);
mv.visitLineNumber(160, l6);
mv.visitVarInsn(ALOAD, 6);
mv.visitMethodInsn(INVOKEINTERFACE, "org/apache/http/HttpResponse", "getEntity", "()Lorg/apache/http/HttpEntity;");
mv.visitMethodInsn(INVOKEINTERFACE, "org/apache/http/HttpEntity", "getContent", "()Ljava/io/InputStream;");
mv.visitVarInsn(ASTORE, 8);
Label l34 = new Label();
mv.visitLabel(l34);
mv.visitLineNumber(161, l34);
mv.visitTypeInsn(NEW, "java/io/BufferedReader");
mv.visitInsn(DUP);
Label l35 = new Label();
mv.visitLabel(l35);
mv.visitLineNumber(162, l35);
mv.visitTypeInsn(NEW, "java/io/InputStreamReader");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 8);
mv.visitLdcInsn("UTF-8");
mv.visitMethodInsn(INVOKESPECIAL, "java/io/InputStreamReader", "<init>", "(Ljava/io/InputStream;Ljava/lang/String;)V");
Label l36 = new Label();
mv.visitLabel(l36);
mv.visitLineNumber(161, l36);
mv.visitMethodInsn(INVOKESPECIAL, "java/io/BufferedReader", "<init>", "(Ljava/io/Reader;)V");
mv.visitVarInsn(ASTORE, 9);
Label l37 = new Label();
mv.visitLabel(l37);
mv.visitLineNumber(163, l37);
mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V");
mv.visitVarInsn(ASTORE, 10);
Label l38 = new Label();
mv.visitLabel(l38);
mv.visitLineNumber(164, l38);
mv.visitInsn(ACONST_NULL);
mv.visitVarInsn(ASTORE, 11);
Label l39 = new Label();
mv.visitLabel(l39);
mv.visitLineNumber(165, l39);
Label l40 = new Label();
mv.visitJumpInsn(GOTO, l40);
Label l41 = new Label();
mv.visitLabel(l41);
mv.visitLineNumber(166, l41);
mv.visitFrame(Opcodes.F_FULL, 12, new Object[] {"org/cerberus/test/CerberusTestRunner", "java/lang/String", "org/apache/http/client/HttpClient", "java/util/ArrayList", "org/apache/http/client/methods/HttpPost", "org/apache/http/client/entity/UrlEncodedFormEntity", "org/apache/http/HttpResponse", "java/lang/String", "java/io/InputStream", "java/io/BufferedReader", "java/lang/StringBuilder", "java/lang/String"}, 0, new Object[] {});
mv.visitVarInsn(ALOAD, 10);
mv.visitVarInsn(ALOAD, 11);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;");
mv.visitInsn(POP);
mv.visitLabel(l40);
mv.visitLineNumber(165, l40);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 9);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/BufferedReader", "readLine", "()Ljava/lang/String;");
mv.visitInsn(DUP);
mv.visitVarInsn(ASTORE, 11);
mv.visitJumpInsn(IFNONNULL, l41);
Label l42 = new Label();
mv.visitLabel(l42);
mv.visitLineNumber(168, l42);
mv.visitVarInsn(ALOAD, 8);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/InputStream", "close", "()V");
Label l43 = new Label();
mv.visitLabel(l43);
mv.visitLineNumber(169, l43);
mv.visitVarInsn(ALOAD, 10);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;");
mv.visitVarInsn(ASTORE, 7);
mv.visitLabel(l7);
mv.visitLineNumber(170, l7);
Label l44 = new Label();
mv.visitJumpInsn(GOTO, l44);
mv.visitLabel(l8);
mv.visitFrame(Opcodes.F_FULL, 8, new Object[] {"org/cerberus/test/CerberusTestRunner", "java/lang/String", "org/apache/http/client/HttpClient", "java/util/ArrayList", "org/apache/http/client/methods/HttpPost", "org/apache/http/client/entity/UrlEncodedFormEntity", "org/apache/http/HttpResponse", "java/lang/String"}, 1, new Object[] {"java/lang/Exception"});
mv.visitVarInsn(ASTORE, 8);
Label l45 = new Label();
mv.visitLabel(l45);
mv.visitLineNumber(171, l45);
mv.visitLdcInsn("Error");
mv.visitVarInsn(ASTORE, 7);
mv.visitLabel(l44);
mv.visitLineNumber(177, l44);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 7);
mv.visitVarInsn(ASTORE, 8);
Label l46 = new Label();
mv.visitLabel(l46);
mv.visitLineNumber(178, l46);
mv.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
mv.visitVarInsn(ALOAD, 8);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V");
Label l47 = new Label();
mv.visitLabel(l47);
mv.visitLineNumber(179, l47);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 8);
mv.visitLdcInsn("-");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "split", "(Ljava/lang/String;)[Ljava/lang/String;");
mv.visitInsn(ICONST_0);
mv.visitInsn(AALOAD);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "parseInt", "(Ljava/lang/String;)I");
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "valueOf", "(I)Ljava/lang/Integer;");
mv.visitFieldInsn(PUTFIELD, "org/cerberus/test/CerberusTestRunner", "totalReportId", "Ljava/lang/Integer;");
Label l48 = new Label();
mv.visitLabel(l48);
mv.visitLineNumber(180, l48);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "totalReportId", "Ljava/lang/Integer;");
mv.visitFieldInsn(PUTSTATIC, "org/cerberus/index/CerberusAPI", "totalReportId", "Ljava/lang/Integer;");
Label l49 = new Label();
mv.visitLabel(l49);
mv.visitLineNumber(181, l49);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 8);
mv.visitLdcInsn("-");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "split", "(Ljava/lang/String;)[Ljava/lang/String;");
mv.visitInsn(ICONST_1);
mv.visitInsn(AALOAD);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "parseInt", "(Ljava/lang/String;)I");
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "valueOf", "(I)Ljava/lang/Integer;");
mv.visitFieldInsn(PUTFIELD, "org/cerberus/test/CerberusTestRunner", "totalScenarioId", "Ljava/lang/Integer;");
Label l50 = new Label();
mv.visitLabel(l50);
mv.visitLineNumber(182, l50);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "totalScenarioId", "Ljava/lang/Integer;");
mv.visitFieldInsn(PUTSTATIC, "org/cerberus/index/CerberusAPI", "totalScenarioId", "Ljava/lang/Integer;");
Label l51 = new Label();
mv.visitLabel(l51);
mv.visitLineNumber(183, l51);
mv.visitVarInsn(ALOAD, 8);
mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "totalReportId", "Ljava/lang/Integer;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;");
mv.visitLdcInsn("-");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;");
mv.visitVarInsn(ALOAD, 8);
mv.visitLdcInsn("-");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "split", "(Ljava/lang/String;)[Ljava/lang/String;");
mv.visitInsn(ICONST_1);
mv.visitInsn(AALOAD);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;");
mv.visitLdcInsn("-");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;");
mv.visitLdcInsn("");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "replaceFirst", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;");
mv.visitVarInsn(ASTORE, 9);
Label l52 = new Label();
mv.visitLabel(l52);
mv.visitLineNumber(184, l52);
mv.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
mv.visitVarInsn(ALOAD, 9);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V");
Label l53 = new Label();
mv.visitLabel(l53);
mv.visitLineNumber(185, l53);
mv.visitTypeInsn(NEW, "com/google/gson/Gson");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "com/google/gson/Gson", "<init>", "()V");
mv.visitVarInsn(ASTORE, 10);
Label l54 = new Label();
mv.visitLabel(l54);
mv.visitLineNumber(202, l54);
mv.visitTypeInsn(NEW, "com/google/gson/stream/JsonReader");
mv.visitInsn(DUP);
mv.visitTypeInsn(NEW, "java/io/StringReader");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 9);
mv.visitMethodInsn(INVOKESPECIAL, "java/io/StringReader", "<init>", "(Ljava/lang/String;)V");
mv.visitMethodInsn(INVOKESPECIAL, "com/google/gson/stream/JsonReader", "<init>", "(Ljava/io/Reader;)V");
mv.visitVarInsn(ASTORE, 11);
Label l55 = new Label();
mv.visitLabel(l55);
mv.visitLineNumber(203, l55);
mv.visitVarInsn(ALOAD, 11);
mv.visitInsn(ICONST_1);
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/stream/JsonReader", "setLenient", "(Z)V");
Label l56 = new Label();
mv.visitLabel(l56);
mv.visitLineNumber(204, l56);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 10);
mv.visitVarInsn(ALOAD, 11);
mv.visitLdcInsn(Type.getType("Lcom/google/gson/JsonArray;"));
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/Gson", "fromJson", "(Lcom/google/gson/stream/JsonReader;Ljava/lang/reflect/Type;)Ljava/lang/Object;");
mv.visitTypeInsn(CHECKCAST, "com/google/gson/JsonArray");
mv.visitFieldInsn(PUTFIELD, "org/cerberus/test/CerberusTestRunner", "scenarioJsonArr", "Lcom/google/gson/JsonArray;");
Label l57 = new Label();
mv.visitLabel(l57);
mv.visitLineNumber(208, l57);
mv.visitMethodInsn(INVOKESTATIC, "org/cerberus/event/collection/MotionCollector", "getInstance", "()Lorg/cerberus/scenario/MotionCollectionManager;");
mv.visitTypeInsn(NEW, "org/cerberus/test/CerberusTestRunner$1");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKESPECIAL, "org/cerberus/test/CerberusTestRunner$1", "<init>", "(Lorg/cerberus/test/CerberusTestRunner;)V");
mv.visitMethodInsn(INVOKEVIRTUAL, "org/cerberus/scenario/MotionCollectionManager", "setMotionAddListener", "(Lorg/cerberus/scenario/MotionCollectionManager$MotionAddListener;)V");
Label l58 = new Label();
mv.visitLabel(l58);
mv.visitLineNumber(255, l58);
mv.visitInsn(RETURN);
Label l59 = new Label();
mv.visitLabel(l59);
mv.visitLocalVariable("this", "Lorg/cerberus/test/CerberusTestRunner;", null, l9, l59, 0);
mv.visitLocalVariable("i", "Landroid/content/pm/PackageInfo;", null, l15, l1, 1);
mv.visitLocalVariable("c", "Ljava/lang/Class;", "Ljava/lang/Class<*>;", l19, l4, 1);
mv.visitLocalVariable("get", "Ljava/lang/reflect/Method;", null, l20, l4, 2);
mv.visitLocalVariable("ignored", "Ljava/lang/Exception;", null, l23, l22, 1);
mv.visitLocalVariable("url", "Ljava/lang/String;", null, l24, l59, 1);
mv.visitLocalVariable("client", "Lorg/apache/http/client/HttpClient;", null, l25, l59, 2);
mv.visitLocalVariable("nameValuePairs", "Ljava/util/ArrayList;", "Ljava/util/ArrayList<Lorg/apache/http/NameValuePair;>;", l27, l59, 3);
mv.visitLocalVariable("httpPost", "Lorg/apache/http/client/methods/HttpPost;", null, l29, l59, 4);
mv.visitLocalVariable("entityRequest", "Lorg/apache/http/client/entity/UrlEncodedFormEntity;", null, l31, l59, 5);
mv.visitLocalVariable("responsePost", "Lorg/apache/http/HttpResponse;", null, l33, l59, 6);
mv.visitLocalVariable("result", "Ljava/lang/String;", null, l6, l59, 7);
mv.visitLocalVariable("in", "Ljava/io/InputStream;", null, l34, l7, 8);
mv.visitLocalVariable("reader", "Ljava/io/BufferedReader;", null, l37, l7, 9);
mv.visitLocalVariable("str", "Ljava/lang/StringBuilder;", null, l38, l7, 10);
mv.visitLocalVariable("line", "Ljava/lang/String;", null, l39, l7, 11);
mv.visitLocalVariable("ex", "Ljava/lang/Exception;", null, l45, l44, 8);
mv.visitLocalVariable("resString", "Ljava/lang/String;", null, l46, l59, 8);
mv.visitLocalVariable("strJsonArr", "Ljava/lang/String;", null, l52, l59, 9);
mv.visitLocalVariable("gson", "Lcom/google/gson/Gson;", null, l54, l59, 10);
mv.visitLocalVariable("reader", "Lcom/google/gson/stream/JsonReader;", null, l55, l59, 11);
mv.visitMaxs(6, 12);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "testRun", "()V", null, new String[] { "java/lang/Exception" });
mv.visitCode();
Label l0 = new Label();
Label l1 = new Label();
Label l2 = new Label();
mv.visitTryCatchBlock(l0, l1, l2, "java/lang/Exception");
Label l3 = new Label();
Label l4 = new Label();
Label l5 = new Label();
mv.visitTryCatchBlock(l3, l4, l5, "java/lang/Exception");
Label l6 = new Label();
Label l7 = new Label();
Label l8 = new Label();
mv.visitTryCatchBlock(l6, l7, l8, "java/lang/Exception");
Label l9 = new Label();
Label l10 = new Label();
Label l11 = new Label();
mv.visitTryCatchBlock(l9, l10, l11, "java/lang/Exception");
Label l12 = new Label();
Label l13 = new Label();
Label l14 = new Label();
mv.visitTryCatchBlock(l12, l13, l14, "java/lang/Exception");
Label l15 = new Label();
Label l16 = new Label();
Label l17 = new Label();
mv.visitTryCatchBlock(l15, l16, l17, "java/lang/Exception");
Label l18 = new Label();
Label l19 = new Label();
Label l20 = new Label();
mv.visitTryCatchBlock(l18, l19, l20, "java/lang/Exception");
Label l21 = new Label();
Label l22 = new Label();
Label l23 = new Label();
mv.visitTryCatchBlock(l21, l22, l23, "java/lang/Exception");
Label l24 = new Label();
Label l25 = new Label();
Label l26 = new Label();
mv.visitTryCatchBlock(l24, l25, l26, "java/lang/Exception");
Label l27 = new Label();
Label l28 = new Label();
Label l29 = new Label();
mv.visitTryCatchBlock(l27, l28, l29, "java/lang/Exception");
Label l30 = new Label();
mv.visitLabel(l30);
mv.visitLineNumber(258, l30);
mv.visitLdcInsn(new Long(5000L));
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Thread", "sleep", "(J)V");
Label l31 = new Label();
mv.visitLabel(l31);
mv.visitLineNumber(260, l31);
mv.visitMethodInsn(INVOKESTATIC, "org/cerberus/crawler/ProfilingCrawler", "getInstance", "()Lorg/cerberus/crawler/ProfilingCrawler;");
mv.visitMethodInsn(INVOKEVIRTUAL, "org/cerberus/crawler/ProfilingCrawler", "start", "()V");
Label l32 = new Label();
mv.visitLabel(l32);
mv.visitLineNumber(264, l32);
mv.visitLdcInsn(packageName+".R$id");
mv.visitVarInsn(ASTORE, 1);
Label l33 = new Label();
mv.visitLabel(l33);
mv.visitLineNumber(267, l33);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 2);
Label l34 = new Label();
mv.visitLabel(l34);
mv.visitLineNumber(268, l34);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 3);
Label l35 = new Label();
mv.visitLabel(l35);
Label l36 = new Label();
mv.visitJumpInsn(GOTO, l36);
Label l37 = new Label();
mv.visitLabel(l37);
mv.visitLineNumber(270, l37);
mv.visitFrame(Opcodes.F_APPEND,3, new Object[] {"java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "scenarioJsonArr", "Lcom/google/gson/JsonArray;");
mv.visitVarInsn(ILOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonArray", "get", "(I)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsJsonObject", "()Lcom/google/gson/JsonObject;");
mv.visitVarInsn(ASTORE, 4);
Label l38 = new Label();
mv.visitLabel(l38);
mv.visitLineNumber(272, l38);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "isFirst", "Z");
Label l39 = new Label();
mv.visitJumpInsn(IFEQ, l39);
Label l40 = new Label();
mv.visitLabel(l40);
mv.visitLineNumber(273, l40);
mv.visitVarInsn(ALOAD, 0);
mv.visitInsn(ICONST_0);
mv.visitFieldInsn(PUTFIELD, "org/cerberus/test/CerberusTestRunner", "isFirst", "Z");
Label l41 = new Label();
mv.visitLabel(l41);
mv.visitLineNumber(274, l41);
Label l42 = new Label();
mv.visitJumpInsn(GOTO, l42);
mv.visitLabel(l39);
mv.visitLineNumber(275, l39);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"com/google/gson/JsonObject"}, 0, null);
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("sleep");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
Label l43 = new Label();
mv.visitJumpInsn(IFNONNULL, l43);
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("sleep");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsString", "()Ljava/lang/String;");
mv.visitLdcInsn("null");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z");
mv.visitJumpInsn(IFNE, l42);
mv.visitLabel(l43);
mv.visitLineNumber(277, l43);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitLdcInsn("cerberusTest");
mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
mv.visitInsn(DUP);
mv.visitLdcInsn("sleep value ");
mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "(Ljava/lang/String;)V");
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("sleep");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsInt", "()I");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(I)Ljava/lang/StringBuilder;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKESTATIC, "android/util/Log", "d", "(Ljava/lang/String;Ljava/lang/String;)I");
mv.visitInsn(POP);
Label l44 = new Label();
mv.visitLabel(l44);
mv.visitLineNumber(280, l44);
mv.visitLdcInsn(new Long(2000L));
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Thread", "sleep", "(J)V");
Label l45 = new Label();
mv.visitLabel(l45);
mv.visitLineNumber(281, l45);
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("sleep");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsInt", "()I");
mv.visitInsn(I2L);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Thread", "sleep", "(J)V");
mv.visitLabel(l42);
mv.visitLineNumber(286, l42);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitLdcInsn("cerberusTest");
mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
mv.visitInsn(DUP);
mv.visitLdcInsn("R class is ");
mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "(Ljava/lang/String;)V");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKESTATIC, "android/util/Log", "d", "(Ljava/lang/String;Ljava/lang/String;)I");
mv.visitInsn(POP);
Label l46 = new Label();
mv.visitLabel(l46);
mv.visitLineNumber(287, l46);
mv.visitLdcInsn("cerberusTest");
mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
mv.visitInsn(DUP);
mv.visitLdcInsn("View value ");
mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "(Ljava/lang/String;)V");
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("view");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsString", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKESTATIC, "android/util/Log", "d", "(Ljava/lang/String;Ljava/lang/String;)I");
mv.visitInsn(POP);
Label l47 = new Label();
mv.visitLabel(l47);
mv.visitLineNumber(288, l47);
mv.visitLdcInsn("cerberusTest");
mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
mv.visitInsn(DUP);
mv.visitLdcInsn("Param value ");
mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "(Ljava/lang/String;)V");
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("param");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsString", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKESTATIC, "android/util/Log", "d", "(Ljava/lang/String;Ljava/lang/String;)I");
mv.visitInsn(POP);
Label l48 = new Label();
mv.visitLabel(l48);
mv.visitLineNumber(289, l48);
mv.visitLdcInsn("cerberusTest");
mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
mv.visitInsn(DUP);
mv.visitLdcInsn("ActionType value ");
mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "(Ljava/lang/String;)V");
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("action_type");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsString", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKESTATIC, "android/util/Log", "d", "(Ljava/lang/String;Ljava/lang/String;)I");
mv.visitInsn(POP);
Label l49 = new Label();
mv.visitLabel(l49);
mv.visitLineNumber(291, l49);
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("action_type");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsString", "()Ljava/lang/String;");
mv.visitLdcInsn("Click");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z");
Label l50 = new Label();
mv.visitJumpInsn(IFEQ, l50);
Label l51 = new Label();
mv.visitLabel(l51);
mv.visitLineNumber(295, l51);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Class", "forName", "(Ljava/lang/String;)Ljava/lang/Class;");
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("view");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsString", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getField", "(Ljava/lang/String;)Ljava/lang/reflect/Field;");
mv.visitVarInsn(ASTORE, 5);
mv.visitLabel(l0);
mv.visitLineNumber(298, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitVarInsn(ALOAD, 5);
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "getInt", "(Ljava/lang/Object;)I");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "getView", "(I)Landroid/view/View;");
mv.visitVarInsn(ASTORE, 6);
Label l52 = new Label();
mv.visitLabel(l52);
mv.visitLineNumber(300, l52);
mv.visitVarInsn(ALOAD, 6);
mv.visitTypeInsn(INSTANCEOF, "android/widget/Button");
Label l53 = new Label();
mv.visitJumpInsn(IFEQ, l53);
Label l54 = new Label();
mv.visitLabel(l54);
mv.visitLineNumber(301, l54);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitVarInsn(ALOAD, 5);
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "getInt", "(Ljava/lang/Object;)I");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "getView", "(I)Landroid/view/View;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "clickOnView", "(Landroid/view/View;)V");
Label l55 = new Label();
mv.visitLabel(l55);
mv.visitLineNumber(302, l55);
Label l56 = new Label();
mv.visitJumpInsn(GOTO, l56);
mv.visitLabel(l53);
mv.visitLineNumber(303, l53);
mv.visitFrame(Opcodes.F_APPEND,2, new Object[] {"java/lang/reflect/Field", "android/view/View"}, 0, null);
mv.visitVarInsn(ALOAD, 6);
mv.visitTypeInsn(INSTANCEOF, "android/widget/TextView");
Label l57 = new Label();
mv.visitJumpInsn(IFEQ, l57);
Label l58 = new Label();
mv.visitLabel(l58);
mv.visitLineNumber(304, l58);
mv.visitLdcInsn("cerberusTest");
mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 6);
mv.visitTypeInsn(CHECKCAST, "android/widget/TextView");
mv.visitMethodInsn(INVOKEVIRTUAL, "android/widget/TextView", "getText", "()Ljava/lang/CharSequence;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/lang/CharSequence", "toString", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKESTATIC, "java/lang/String", "valueOf", "(Ljava/lang/Object;)Ljava/lang/String;");
mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "(Ljava/lang/String;)V");
mv.visitLdcInsn(" click");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKESTATIC, "android/util/Log", "i", "(Ljava/lang/String;Ljava/lang/String;)I");
mv.visitInsn(POP);
Label l59 = new Label();
mv.visitLabel(l59);
mv.visitLineNumber(305, l59);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitVarInsn(ALOAD, 6);
mv.visitTypeInsn(CHECKCAST, "android/widget/TextView");
mv.visitMethodInsn(INVOKEVIRTUAL, "android/widget/TextView", "getText", "()Ljava/lang/CharSequence;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/lang/CharSequence", "toString", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "clickOnText", "(Ljava/lang/String;)V");
Label l60 = new Label();
mv.visitLabel(l60);
mv.visitLineNumber(306, l60);
mv.visitJumpInsn(GOTO, l56);
mv.visitLabel(l57);
mv.visitLineNumber(307, l57);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitVarInsn(ALOAD, 5);
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "getInt", "(Ljava/lang/Object;)I");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "getView", "(I)Landroid/view/View;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "clickOnView", "(Landroid/view/View;)V");
mv.visitLabel(l1);
mv.visitLineNumber(309, l1);
mv.visitJumpInsn(GOTO, l56);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_FULL, 6, new Object[] {"org/cerberus/test/CerberusTestRunner", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "com/google/gson/JsonObject", "java/lang/reflect/Field"}, 1, new Object[] {"java/lang/Exception"});
mv.visitVarInsn(ASTORE, 6);
Label l61 = new Label();
mv.visitLabel(l61);
mv.visitLineNumber(312, l61);
mv.visitJumpInsn(GOTO, l56);
mv.visitLabel(l50);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("action_type");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsString", "()Ljava/lang/String;");
mv.visitLdcInsn("LongClick");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z");
Label l62 = new Label();
mv.visitJumpInsn(IFEQ, l62);
Label l63 = new Label();
mv.visitLabel(l63);
mv.visitLineNumber(316, l63);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Class", "forName", "(Ljava/lang/String;)Ljava/lang/Class;");
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("view");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsString", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getField", "(Ljava/lang/String;)Ljava/lang/reflect/Field;");
mv.visitVarInsn(ASTORE, 5);
mv.visitLabel(l3);
mv.visitLineNumber(319, l3);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitVarInsn(ALOAD, 5);
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "getInt", "(Ljava/lang/Object;)I");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "getView", "(I)Landroid/view/View;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "clickLongOnView", "(Landroid/view/View;)V");
mv.visitLabel(l4);
mv.visitLineNumber(321, l4);
mv.visitJumpInsn(GOTO, l56);
mv.visitLabel(l5);
mv.visitFrame(Opcodes.F_FULL, 6, new Object[] {"org/cerberus/test/CerberusTestRunner", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "com/google/gson/JsonObject", "java/lang/reflect/Field"}, 1, new Object[] {"java/lang/Exception"});
mv.visitVarInsn(ASTORE, 6);
Label l64 = new Label();
mv.visitLabel(l64);
mv.visitLineNumber(324, l64);
mv.visitJumpInsn(GOTO, l56);
mv.visitLabel(l62);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("action_type");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsString", "()Ljava/lang/String;");
mv.visitLdcInsn("DatePicker");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z");
Label l65 = new Label();
mv.visitJumpInsn(IFEQ, l65);
mv.visitLabel(l6);
mv.visitLineNumber(330, l6);
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("param");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsString", "()Ljava/lang/String;");
mv.visitVarInsn(ASTORE, 5);
Label l66 = new Label();
mv.visitLabel(l66);
mv.visitLineNumber(334, l66);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ALOAD, 5);
mv.visitLdcInsn(",");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "split", "(Ljava/lang/String;)[Ljava/lang/String;");
mv.visitInsn(ICONST_0);
mv.visitInsn(AALOAD);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "parseInt", "(Ljava/lang/String;)I");
mv.visitVarInsn(ALOAD, 5);
mv.visitLdcInsn(",");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "split", "(Ljava/lang/String;)[Ljava/lang/String;");
mv.visitInsn(ICONST_1);
mv.visitInsn(AALOAD);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "parseInt", "(Ljava/lang/String;)I");
mv.visitVarInsn(ALOAD, 5);
mv.visitLdcInsn(",");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "split", "(Ljava/lang/String;)[Ljava/lang/String;");
mv.visitInsn(ICONST_2);
mv.visitInsn(AALOAD);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "parseInt", "(Ljava/lang/String;)I");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "setDatePicker", "(IIII)V");
Label l67 = new Label();
mv.visitLabel(l67);
mv.visitLineNumber(336, l67);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitIntInsn(SIPUSH, 1500);
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "sleep", "(I)V");
Label l68 = new Label();
mv.visitLabel(l68);
mv.visitLineNumber(337, l68);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitLdcInsn("\uc124\uc815");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "clickOnText", "(Ljava/lang/String;)V");
mv.visitLabel(l7);
mv.visitLineNumber(339, l7);
mv.visitJumpInsn(GOTO, l56);
mv.visitLabel(l8);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Exception"});
mv.visitVarInsn(ASTORE, 5);
Label l69 = new Label();
mv.visitLabel(l69);
mv.visitLineNumber(342, l69);
mv.visitJumpInsn(GOTO, l56);
mv.visitLabel(l65);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("action_type");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsString", "()Ljava/lang/String;");
mv.visitLdcInsn("TimePicker");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z");
Label l70 = new Label();
mv.visitJumpInsn(IFEQ, l70);
mv.visitLabel(l9);
mv.visitLineNumber(348, l9);
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("param");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsString", "()Ljava/lang/String;");
mv.visitVarInsn(ASTORE, 5);
Label l71 = new Label();
mv.visitLabel(l71);
mv.visitLineNumber(352, l71);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ALOAD, 5);
mv.visitLdcInsn(",");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "split", "(Ljava/lang/String;)[Ljava/lang/String;");
mv.visitInsn(ICONST_0);
mv.visitInsn(AALOAD);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "parseInt", "(Ljava/lang/String;)I");
mv.visitVarInsn(ALOAD, 5);
mv.visitLdcInsn(",");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "split", "(Ljava/lang/String;)[Ljava/lang/String;");
mv.visitInsn(ICONST_1);
mv.visitInsn(AALOAD);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "parseInt", "(Ljava/lang/String;)I");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "setTimePicker", "(III)V");
Label l72 = new Label();
mv.visitLabel(l72);
mv.visitLineNumber(354, l72);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitLdcInsn("\uc124\uc815");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "clickOnText", "(Ljava/lang/String;)V");
mv.visitLabel(l10);
mv.visitLineNumber(356, l10);
mv.visitJumpInsn(GOTO, l56);
mv.visitLabel(l11);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Exception"});
mv.visitVarInsn(ASTORE, 5);
Label l73 = new Label();
mv.visitLabel(l73);
mv.visitLineNumber(359, l73);
mv.visitJumpInsn(GOTO, l56);
mv.visitLabel(l70);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("action_type");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsString", "()Ljava/lang/String;");
mv.visitLdcInsn("EditText");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z");
Label l74 = new Label();
mv.visitJumpInsn(IFEQ, l74);
Label l75 = new Label();
mv.visitLabel(l75);
mv.visitLineNumber(361, l75);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Class", "forName", "(Ljava/lang/String;)Ljava/lang/Class;");
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("view");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsString", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getField", "(Ljava/lang/String;)Ljava/lang/reflect/Field;");
mv.visitVarInsn(ASTORE, 5);
mv.visitLabel(l12);
mv.visitLineNumber(364, l12);
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("param");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsString", "()Ljava/lang/String;");
mv.visitVarInsn(ASTORE, 6);
Label l76 = new Label();
mv.visitLabel(l76);
mv.visitLineNumber(394, l76);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "getCurrentActivity", "()Landroid/app/Activity;");
mv.visitVarInsn(ALOAD, 5);
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "getInt", "(Ljava/lang/Object;)I");
mv.visitMethodInsn(INVOKEVIRTUAL, "android/app/Activity", "findViewById", "(I)Landroid/view/View;");
mv.visitTypeInsn(CHECKCAST, "android/widget/EditText");
mv.visitVarInsn(ALOAD, 6);
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "enterText", "(Landroid/widget/EditText;Ljava/lang/String;)V");
Label l77 = new Label();
mv.visitLabel(l77);
mv.visitLineNumber(396, l77);
mv.visitTypeInsn(NEW, "org/cerberus/test/CerberusTestRunner$2");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKESPECIAL, "org/cerberus/test/CerberusTestRunner$2", "<init>", "(Lorg/cerberus/test/CerberusTestRunner;)V");
mv.visitInsn(ICONST_1);
mv.visitTypeInsn(ANEWARRAY, "java/lang/Object");
mv.visitInsn(DUP);
mv.visitInsn(ICONST_0);
Label l78 = new Label();
mv.visitLabel(l78);
mv.visitLineNumber(425, l78);
mv.visitVarInsn(ALOAD, 6);
mv.visitInsn(AASTORE);
mv.visitMethodInsn(INVOKEVIRTUAL, "org/cerberus/test/CerberusTestRunner$2", "execute", "([Ljava/lang/Object;)Landroid/os/AsyncTask;");
mv.visitInsn(POP);
mv.visitLabel(l13);
mv.visitLineNumber(427, l13);
mv.visitJumpInsn(GOTO, l56);
mv.visitLabel(l14);
mv.visitFrame(Opcodes.F_FULL, 6, new Object[] {"org/cerberus/test/CerberusTestRunner", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "com/google/gson/JsonObject", "java/lang/reflect/Field"}, 1, new Object[] {"java/lang/Exception"});
mv.visitVarInsn(ASTORE, 6);
Label l79 = new Label();
mv.visitLabel(l79);
mv.visitLineNumber(428, l79);
mv.visitVarInsn(ALOAD, 6);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Exception", "printStackTrace", "()V");
Label l80 = new Label();
mv.visitLabel(l80);
mv.visitLineNumber(430, l80);
mv.visitJumpInsn(GOTO, l56);
mv.visitLabel(l74);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("action_type");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsString", "()Ljava/lang/String;");
mv.visitLdcInsn("ListItemClick");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z");
Label l81 = new Label();
mv.visitJumpInsn(IFEQ, l81);
Label l82 = new Label();
mv.visitLabel(l82);
mv.visitLineNumber(431, l82);
mv.visitLdcInsn("cerberusTest");
mv.visitLdcInsn("setListItemClick");
mv.visitMethodInsn(INVOKESTATIC, "android/util/Log", "d", "(Ljava/lang/String;Ljava/lang/String;)I");
mv.visitInsn(POP);
mv.visitLabel(l15);
mv.visitLineNumber(436, l15);
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("param");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsString", "()Ljava/lang/String;");
mv.visitVarInsn(ASTORE, 5);
Label l83 = new Label();
mv.visitLabel(l83);
mv.visitLineNumber(437, l83);
mv.visitLdcInsn("cerberusTest");
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKESTATIC, "android/util/Log", "d", "(Ljava/lang/String;Ljava/lang/String;)I");
mv.visitInsn(POP);
Label l84 = new Label();
mv.visitLabel(l84);
mv.visitLineNumber(438, l84);
mv.visitVarInsn(ALOAD, 5);
mv.visitLdcInsn(",");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "split", "(Ljava/lang/String;)[Ljava/lang/String;");
mv.visitInsn(ICONST_0);
mv.visitInsn(AALOAD);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "parseInt", "(Ljava/lang/String;)I");
mv.visitVarInsn(ISTORE, 6);
Label l85 = new Label();
mv.visitLabel(l85);
mv.visitLineNumber(439, l85);
mv.visitLdcInsn("cerberusTest");
mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
mv.visitInsn(DUP);
mv.visitVarInsn(ILOAD, 6);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/String", "valueOf", "(I)Ljava/lang/String;");
mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "(Ljava/lang/String;)V");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKESTATIC, "android/util/Log", "d", "(Ljava/lang/String;Ljava/lang/String;)I");
mv.visitInsn(POP);
Label l86 = new Label();
mv.visitLabel(l86);
mv.visitLineNumber(440, l86);
mv.visitVarInsn(ALOAD, 5);
mv.visitLdcInsn(",");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "split", "(Ljava/lang/String;)[Ljava/lang/String;");
mv.visitInsn(ICONST_1);
mv.visitInsn(AALOAD);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "parseInt", "(Ljava/lang/String;)I");
mv.visitVarInsn(ISTORE, 7);
Label l87 = new Label();
mv.visitLabel(l87);
mv.visitLineNumber(441, l87);
mv.visitLdcInsn("cerberusTest");
mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
mv.visitInsn(DUP);
mv.visitVarInsn(ILOAD, 7);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/String", "valueOf", "(I)Ljava/lang/String;");
mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "(Ljava/lang/String;)V");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKESTATIC, "android/util/Log", "d", "(Ljava/lang/String;Ljava/lang/String;)I");
mv.visitInsn(POP);
Label l88 = new Label();
mv.visitLabel(l88);
mv.visitLineNumber(442, l88);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitVarInsn(ILOAD, 7);
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "getView", "(I)Landroid/view/View;");
mv.visitTypeInsn(CHECKCAST, "android/widget/AdapterView");
mv.visitVarInsn(ASTORE, 8);
Label l89 = new Label();
mv.visitLabel(l89);
mv.visitLineNumber(443, l89);
mv.visitLdcInsn("cerberusTest");
mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V");
mv.visitVarInsn(ALOAD, 8);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKESTATIC, "android/util/Log", "d", "(Ljava/lang/String;Ljava/lang/String;)I");
mv.visitInsn(POP);
Label l90 = new Label();
mv.visitLabel(l90);
mv.visitLineNumber(444, l90);
mv.visitLdcInsn("cerberusTest");
mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 8);
mv.visitMethodInsn(INVOKEVIRTUAL, "android/widget/AdapterView", "getChildCount", "()I");
mv.visitMethodInsn(INVOKESTATIC, "java/lang/String", "valueOf", "(I)Ljava/lang/String;");
mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "(Ljava/lang/String;)V");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKESTATIC, "android/util/Log", "d", "(Ljava/lang/String;Ljava/lang/String;)I");
mv.visitInsn(POP);
Label l91 = new Label();
mv.visitLabel(l91);
mv.visitLineNumber(445, l91);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Class", "forName", "(Ljava/lang/String;)Ljava/lang/Class;");
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("view");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsString", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getField", "(Ljava/lang/String;)Ljava/lang/reflect/Field;");
mv.visitVarInsn(ASTORE, 9);
Label l92 = new Label();
mv.visitLabel(l92);
mv.visitLineNumber(446, l92);
mv.visitLdcInsn("cerberusTest");
mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V");
mv.visitVarInsn(ALOAD, 9);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKESTATIC, "android/util/Log", "d", "(Ljava/lang/String;Ljava/lang/String;)I");
mv.visitInsn(POP);
Label l93 = new Label();
mv.visitLabel(l93);
mv.visitLineNumber(448, l93);
mv.visitVarInsn(ALOAD, 8);
mv.visitVarInsn(ILOAD, 6);
mv.visitMethodInsn(INVOKEVIRTUAL, "android/widget/AdapterView", "getChildAt", "(I)Landroid/view/View;");
mv.visitVarInsn(ASTORE, 10);
Label l94 = new Label();
mv.visitLabel(l94);
mv.visitLineNumber(449, l94);
mv.visitLdcInsn("cerberusTest");
mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V");
mv.visitVarInsn(ALOAD, 10);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKESTATIC, "android/util/Log", "d", "(Ljava/lang/String;Ljava/lang/String;)I");
mv.visitInsn(POP);
Label l95 = new Label();
mv.visitLabel(l95);
mv.visitLineNumber(451, l95);
mv.visitInsn(ACONST_NULL);
mv.visitVarInsn(ASTORE, 11);
Label l96 = new Label();
mv.visitLabel(l96);
mv.visitLineNumber(453, l96);
mv.visitVarInsn(ALOAD, 10);
mv.visitTypeInsn(INSTANCEOF, "android/view/ViewGroup");
Label l97 = new Label();
mv.visitJumpInsn(IFEQ, l97);
Label l98 = new Label();
mv.visitLabel(l98);
mv.visitLineNumber(455, l98);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 10);
mv.visitTypeInsn(CHECKCAST, "android/view/ViewGroup");
mv.visitVarInsn(ALOAD, 9);
mv.visitVarInsn(ALOAD, 9);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "getInt", "(Ljava/lang/Object;)I");
mv.visitMethodInsn(INVOKEVIRTUAL, "org/cerberus/test/CerberusTestRunner", "findView", "(Landroid/view/ViewGroup;I)Landroid/view/View;");
mv.visitVarInsn(ASTORE, 11);
Label l99 = new Label();
mv.visitLabel(l99);
mv.visitLineNumber(457, l99);
mv.visitLdcInsn("cerberusTest");
mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V");
mv.visitVarInsn(ALOAD, 11);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKESTATIC, "android/util/Log", "d", "(Ljava/lang/String;Ljava/lang/String;)I");
mv.visitInsn(POP);
mv.visitLabel(l97);
mv.visitLineNumber(460, l97);
mv.visitFrame(Opcodes.F_FULL, 12, new Object[] {"org/cerberus/test/CerberusTestRunner", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "com/google/gson/JsonObject", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "android/widget/AdapterView", "java/lang/reflect/Field", "android/view/View", "android/view/View"}, 0, new Object[] {});
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitVarInsn(ALOAD, 11);
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "clickOnView", "(Landroid/view/View;)V");
mv.visitLabel(l16);
mv.visitLineNumber(472, l16);
mv.visitJumpInsn(GOTO, l56);
mv.visitLabel(l17);
mv.visitFrame(Opcodes.F_FULL, 5, new Object[] {"org/cerberus/test/CerberusTestRunner", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "com/google/gson/JsonObject"}, 1, new Object[] {"java/lang/Exception"});
mv.visitVarInsn(ASTORE, 5);
Label l100 = new Label();
mv.visitLabel(l100);
mv.visitLineNumber(473, l100);
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Exception", "printStackTrace", "()V");
Label l101 = new Label();
mv.visitLabel(l101);
mv.visitLineNumber(475, l101);
mv.visitJumpInsn(GOTO, l56);
mv.visitLabel(l81);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("action_type");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsString", "()Ljava/lang/String;");
mv.visitLdcInsn("ListClick");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z");
Label l102 = new Label();
mv.visitJumpInsn(IFEQ, l102);
mv.visitLabel(l18);
mv.visitLineNumber(478, l18);
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("param");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsString", "()Ljava/lang/String;");
mv.visitVarInsn(ASTORE, 5);
Label l103 = new Label();
mv.visitLabel(l103);
mv.visitLineNumber(479, l103);
mv.visitVarInsn(ALOAD, 5);
mv.visitLdcInsn(",");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "split", "(Ljava/lang/String;)[Ljava/lang/String;");
mv.visitInsn(ICONST_0);
mv.visitInsn(AALOAD);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "parseInt", "(Ljava/lang/String;)I");
mv.visitVarInsn(ISTORE, 6);
Label l104 = new Label();
mv.visitLabel(l104);
mv.visitLineNumber(480, l104);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Class", "forName", "(Ljava/lang/String;)Ljava/lang/Class;");
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("view");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsString", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getField", "(Ljava/lang/String;)Ljava/lang/reflect/Field;");
mv.visitVarInsn(ASTORE, 7);
Label l105 = new Label();
mv.visitLabel(l105);
mv.visitLineNumber(482, l105);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitVarInsn(ALOAD, 7);
mv.visitVarInsn(ALOAD, 7);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "getInt", "(Ljava/lang/Object;)I");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "getView", "(I)Landroid/view/View;");
mv.visitTypeInsn(CHECKCAST, "android/widget/ListView");
mv.visitVarInsn(ASTORE, 8);
Label l106 = new Label();
mv.visitLabel(l106);
mv.visitLineNumber(483, l106);
mv.visitVarInsn(ALOAD, 8);
mv.visitVarInsn(ILOAD, 6);
mv.visitMethodInsn(INVOKEVIRTUAL, "android/widget/ListView", "getChildAt", "(I)Landroid/view/View;");
mv.visitVarInsn(ASTORE, 9);
Label l107 = new Label();
mv.visitLabel(l107);
mv.visitLineNumber(485, l107);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitVarInsn(ALOAD, 9);
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "clickOnView", "(Landroid/view/View;)V");
mv.visitLabel(l19);
mv.visitLineNumber(489, l19);
mv.visitJumpInsn(GOTO, l56);
mv.visitLabel(l20);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Exception"});
mv.visitVarInsn(ASTORE, 5);
Label l108 = new Label();
mv.visitLabel(l108);
mv.visitLineNumber(492, l108);
mv.visitJumpInsn(GOTO, l56);
mv.visitLabel(l102);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("action_type");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsString", "()Ljava/lang/String;");
mv.visitLdcInsn("drag");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z");
Label l109 = new Label();
mv.visitJumpInsn(IFEQ, l109);
mv.visitLabel(l21);
mv.visitLineNumber(498, l21);
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("param");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsString", "()Ljava/lang/String;");
mv.visitVarInsn(ASTORE, 5);
Label l110 = new Label();
mv.visitLabel(l110);
mv.visitLineNumber(500, l110);
mv.visitVarInsn(ALOAD, 5);
mv.visitLdcInsn(",");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "split", "(Ljava/lang/String;)[Ljava/lang/String;");
mv.visitInsn(ICONST_0);
mv.visitInsn(AALOAD);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "parseInt", "(Ljava/lang/String;)I");
mv.visitVarInsn(ISTORE, 6);
Label l111 = new Label();
mv.visitLabel(l111);
mv.visitLineNumber(501, l111);
mv.visitVarInsn(ALOAD, 5);
mv.visitLdcInsn(",");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "split", "(Ljava/lang/String;)[Ljava/lang/String;");
mv.visitInsn(ICONST_1);
mv.visitInsn(AALOAD);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "parseInt", "(Ljava/lang/String;)I");
mv.visitVarInsn(ISTORE, 7);
Label l112 = new Label();
mv.visitLabel(l112);
mv.visitLineNumber(502, l112);
mv.visitVarInsn(ALOAD, 5);
mv.visitLdcInsn(",");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "split", "(Ljava/lang/String;)[Ljava/lang/String;");
mv.visitInsn(ICONST_2);
mv.visitInsn(AALOAD);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "parseInt", "(Ljava/lang/String;)I");
mv.visitVarInsn(ISTORE, 8);
Label l113 = new Label();
mv.visitLabel(l113);
mv.visitLineNumber(503, l113);
mv.visitVarInsn(ALOAD, 5);
mv.visitLdcInsn(",");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "split", "(Ljava/lang/String;)[Ljava/lang/String;");
mv.visitInsn(ICONST_3);
mv.visitInsn(AALOAD);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "parseInt", "(Ljava/lang/String;)I");
mv.visitVarInsn(ISTORE, 9);
Label l114 = new Label();
mv.visitLabel(l114);
mv.visitLineNumber(506, l114);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitVarInsn(ILOAD, 6);
mv.visitInsn(I2F);
mv.visitVarInsn(ILOAD, 8);
mv.visitInsn(I2F);
mv.visitVarInsn(ILOAD, 7);
mv.visitInsn(I2F);
mv.visitVarInsn(ILOAD, 9);
mv.visitInsn(I2F);
mv.visitIntInsn(BIPUSH, 40);
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "drag", "(FFFFI)V");
mv.visitLabel(l22);
mv.visitLineNumber(509, l22);
mv.visitJumpInsn(GOTO, l56);
mv.visitLabel(l23);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Exception"});
mv.visitVarInsn(ASTORE, 5);
Label l115 = new Label();
mv.visitLabel(l115);
mv.visitLineNumber(512, l115);
mv.visitJumpInsn(GOTO, l56);
mv.visitLabel(l109);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("action_type");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsString", "()Ljava/lang/String;");
mv.visitLdcInsn("BackButton");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z");
Label l116 = new Label();
mv.visitJumpInsn(IFEQ, l116);
mv.visitLabel(l24);
mv.visitLineNumber(514, l24);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "goBack", "()V");
mv.visitLabel(l25);
mv.visitLineNumber(515, l25);
mv.visitJumpInsn(GOTO, l56);
mv.visitLabel(l26);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Exception"});
mv.visitVarInsn(ASTORE, 5);
Label l117 = new Label();
mv.visitLabel(l117);
mv.visitLineNumber(518, l117);
mv.visitJumpInsn(GOTO, l56);
mv.visitLabel(l116);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("action_type");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsString", "()Ljava/lang/String;");
mv.visitLdcInsn("MenuButton");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z");
Label l118 = new Label();
mv.visitJumpInsn(IFEQ, l118);
mv.visitLabel(l27);
mv.visitLineNumber(520, l27);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitIntInsn(BIPUSH, 82);
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "sendKey", "(I)V");
mv.visitLabel(l28);
mv.visitLineNumber(521, l28);
mv.visitJumpInsn(GOTO, l56);
mv.visitLabel(l29);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Exception"});
mv.visitVarInsn(ASTORE, 5);
Label l119 = new Label();
mv.visitLabel(l119);
mv.visitLineNumber(524, l119);
mv.visitJumpInsn(GOTO, l56);
mv.visitLabel(l118);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("action_type");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsString", "()Ljava/lang/String;");
mv.visitLdcInsn("AlertDialogClick");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z");
Label l120 = new Label();
mv.visitJumpInsn(IFEQ, l120);
Label l121 = new Label();
mv.visitLabel(l121);
mv.visitLineNumber(530, l121);
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("param");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsString", "()Ljava/lang/String;");
mv.visitVarInsn(ASTORE, 5);
Label l122 = new Label();
mv.visitLabel(l122);
mv.visitLineNumber(539, l122);
mv.visitVarInsn(ALOAD, 5);
mv.visitLdcInsn("-1");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z");
Label l123 = new Label();
mv.visitJumpInsn(IFEQ, l123);
Label l124 = new Label();
mv.visitLabel(l124);
mv.visitLineNumber(543, l124);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitLdcInsn(new Integer(16908313));
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "getView", "(I)Landroid/view/View;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "clickOnView", "(Landroid/view/View;)V");
Label l125 = new Label();
mv.visitLabel(l125);
mv.visitLineNumber(545, l125);
mv.visitJumpInsn(GOTO, l56);
mv.visitLabel(l123);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/lang/String"}, 0, null);
mv.visitVarInsn(ALOAD, 5);
mv.visitLdcInsn("-2");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z");
Label l126 = new Label();
mv.visitJumpInsn(IFEQ, l126);
Label l127 = new Label();
mv.visitLabel(l127);
mv.visitLineNumber(547, l127);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitLdcInsn(new Integer(16908314));
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "getView", "(I)Landroid/view/View;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "clickOnView", "(Landroid/view/View;)V");
Label l128 = new Label();
mv.visitLabel(l128);
mv.visitLineNumber(549, l128);
mv.visitJumpInsn(GOTO, l56);
mv.visitLabel(l126);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 5);
mv.visitLdcInsn("-3");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z");
mv.visitJumpInsn(IFEQ, l56);
Label l129 = new Label();
mv.visitLabel(l129);
mv.visitLineNumber(551, l129);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitLdcInsn(new Integer(16908315));
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "getView", "(I)Landroid/view/View;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "clickOnView", "(Landroid/view/View;)V");
Label l130 = new Label();
mv.visitLabel(l130);
mv.visitLineNumber(554, l130);
mv.visitJumpInsn(GOTO, l56);
mv.visitLabel(l120);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("action_type");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsString", "()Ljava/lang/String;");
mv.visitLdcInsn("TextClick");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z");
mv.visitJumpInsn(IFEQ, l56);
Label l131 = new Label();
mv.visitLabel(l131);
mv.visitLineNumber(555, l131);
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("param");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonObject", "get", "(Ljava/lang/String;)Lcom/google/gson/JsonElement;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonElement", "getAsString", "()Ljava/lang/String;");
mv.visitVarInsn(ASTORE, 5);
Label l132 = new Label();
mv.visitLabel(l132);
mv.visitLineNumber(556, l132);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "clickOnText", "(Ljava/lang/String;)V");
mv.visitLabel(l56);
mv.visitLineNumber(268, l56);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitIincInsn(3, 1);
mv.visitLabel(l36);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ILOAD, 3);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "scenarioJsonArr", "Lcom/google/gson/JsonArray;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/JsonArray", "size", "()I");
mv.visitJumpInsn(IF_ICMPLT, l37);
Label l133 = new Label();
mv.visitLabel(l133);
mv.visitLineNumber(574, l133);
mv.visitInsn(RETURN);
Label l134 = new Label();
mv.visitLabel(l134);
mv.visitLocalVariable("this", "Lorg/cerberus/test/CerberusTestRunner;", null, l30, l134, 0);
mv.visitLocalVariable("rClassName", "Ljava/lang/String;", null, l33, l134, 1);
mv.visitLocalVariable("sleepTime", "I", null, l34, l134, 2);
mv.visitLocalVariable("i", "I", null, l35, l133, 3);
mv.visitLocalVariable("scenarioObjJson", "Lcom/google/gson/JsonObject;", null, l38, l56, 4);
mv.visitLocalVariable("field", "Ljava/lang/reflect/Field;", null, l0, l61, 5);
mv.visitLocalVariable("clickView", "Landroid/view/View;", null, l52, l1, 6);
mv.visitLocalVariable("field", "Ljava/lang/reflect/Field;", null, l3, l64, 5);
mv.visitLocalVariable("param", "Ljava/lang/String;", null, l66, l7, 5);
mv.visitLocalVariable("param", "Ljava/lang/String;", null, l71, l10, 5);
mv.visitLocalVariable("field", "Ljava/lang/reflect/Field;", null, l12, l80, 5);
mv.visitLocalVariable("param", "Ljava/lang/String;", null, l76, l13, 6);
mv.visitLocalVariable("e", "Ljava/lang/Exception;", null, l79, l80, 6);
mv.visitLocalVariable("param", "Ljava/lang/String;", null, l83, l16, 5);
mv.visitLocalVariable("index", "I", null, l85, l16, 6);
mv.visitLocalVariable("listViewId", "I", null, l87, l16, 7);
mv.visitLocalVariable("listView", "Landroid/widget/AdapterView;", null, l89, l16, 8);
mv.visitLocalVariable("field", "Ljava/lang/reflect/Field;", null, l92, l16, 9);
mv.visitLocalVariable("listElement", "Landroid/view/View;", null, l94, l16, 10);
mv.visitLocalVariable("btnView", "Landroid/view/View;", null, l96, l16, 11);
mv.visitLocalVariable("e", "Ljava/lang/Exception;", null, l100, l101, 5);
mv.visitLocalVariable("param", "Ljava/lang/String;", null, l103, l19, 5);
mv.visitLocalVariable("index", "I", null, l104, l19, 6);
mv.visitLocalVariable("field", "Ljava/lang/reflect/Field;", null, l105, l19, 7);
mv.visitLocalVariable("listView", "Landroid/widget/ListView;", null, l106, l19, 8);
mv.visitLocalVariable("listElement", "Landroid/view/View;", null, l107, l19, 9);
mv.visitLocalVariable("param", "Ljava/lang/String;", null, l110, l22, 5);
mv.visitLocalVariable("x1", "I", null, l111, l22, 6);
mv.visitLocalVariable("y1", "I", null, l112, l22, 7);
mv.visitLocalVariable("x2", "I", null, l113, l22, 8);
mv.visitLocalVariable("y2", "I", null, l114, l22, 9);
mv.visitLocalVariable("param", "Ljava/lang/String;", null, l122, l130, 5);
mv.visitLocalVariable("param", "Ljava/lang/String;", null, l132, l56, 5);
mv.visitMaxs(6, 12);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "tearDown", "()V", null, new String[] { "java/lang/Exception" });
mv.visitCode();
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitLineNumber(579, l0);
mv.visitFieldInsn(GETSTATIC, "org/cerberus/index/CerberusAPI", "send", "Z");
Label l1 = new Label();
mv.visitJumpInsn(IFEQ, l1);
Label l2 = new Label();
mv.visitLabel(l2);
mv.visitLineNumber(580, l2);
mv.visitInsn(RETURN);
mv.visitLabel(l1);
mv.visitLineNumber(582, l1);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ICONST_1);
mv.visitFieldInsn(PUTSTATIC, "org/cerberus/index/CerberusAPI", "send", "Z");
Label l3 = new Label();
mv.visitLabel(l3);
mv.visitLineNumber(583, l3);
mv.visitMethodInsn(INVOKESTATIC, "org/cerberus/crawler/ProfilingCrawler", "getInstance", "()Lorg/cerberus/crawler/ProfilingCrawler;");
mv.visitMethodInsn(INVOKEVIRTUAL, "org/cerberus/crawler/ProfilingCrawler", "stopThread", "()V");
Label l4 = new Label();
mv.visitLabel(l4);
mv.visitLineNumber(585, l4);
mv.visitTypeInsn(NEW, "com/google/gson/Gson");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "com/google/gson/Gson", "<init>", "()V");
mv.visitVarInsn(ASTORE, 1);
Label l5 = new Label();
mv.visitLabel(l5);
mv.visitLineNumber(587, l5);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/System", "currentTimeMillis", "()J");
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Long", "valueOf", "(J)Ljava/lang/Long;");
mv.visitVarInsn(ASTORE, 2);
Label l6 = new Label();
mv.visitLabel(l6);
mv.visitLineNumber(589, l6);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "finishOpenedActivities", "()V");
Label l7 = new Label();
mv.visitLabel(l7);
mv.visitLineNumber(593, l7);
mv.visitTypeInsn(NEW, "java/util/HashMap");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "java/util/HashMap", "<init>", "()V");
mv.visitVarInsn(ASTORE, 3);
Label l8 = new Label();
mv.visitLabel(l8);
mv.visitLineNumber(596, l8);
mv.visitTypeInsn(NEW, "java/util/ArrayList");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "java/util/ArrayList", "<init>", "()V");
mv.visitVarInsn(ASTORE, 4);
Label l9 = new Label();
mv.visitLabel(l9);
mv.visitLineNumber(598, l9);
mv.visitMethodInsn(INVOKESTATIC, "org/cerberus/profile/cpu/CpuDataList", "getInstance", "()Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;");
mv.visitVarInsn(ASTORE, 6);
Label l10 = new Label();
mv.visitJumpInsn(GOTO, l10);
Label l11 = new Label();
mv.visitLabel(l11);
mv.visitFrame(Opcodes.F_FULL, 7, new Object[] {"org/cerberus/test/CerberusTestRunner", "com/google/gson/Gson", "java/lang/Long", "java/util/Map", "java/util/List", Opcodes.TOP, "java/util/Iterator"}, 0, new Object[] {});
mv.visitVarInsn(ALOAD, 6);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;");
mv.visitVarInsn(ASTORE, 5);
Label l12 = new Label();
mv.visitLabel(l12);
mv.visitLineNumber(599, l12);
mv.visitVarInsn(ALOAD, 5);
mv.visitTypeInsn(CHECKCAST, "java/util/Map");
mv.visitVarInsn(ASTORE, 7);
Label l13 = new Label();
mv.visitLabel(l13);
mv.visitLineNumber(600, l13);
mv.visitTypeInsn(NEW, "java/util/HashMap");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "java/util/HashMap", "<init>", "()V");
mv.visitVarInsn(ASTORE, 8);
Label l14 = new Label();
mv.visitLabel(l14);
mv.visitLineNumber(601, l14);
mv.visitVarInsn(ALOAD, 8);
mv.visitLdcInsn("usage");
mv.visitVarInsn(ALOAD, 7);
mv.visitLdcInsn("usage");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "get", "(Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitInsn(POP);
Label l15 = new Label();
mv.visitLabel(l15);
mv.visitLineNumber(602, l15);
mv.visitVarInsn(ALOAD, 8);
mv.visitLdcInsn("timestamp");
mv.visitVarInsn(ALOAD, 7);
mv.visitLdcInsn("timestamp");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "get", "(Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitInsn(POP);
Label l16 = new Label();
mv.visitLabel(l16);
mv.visitLineNumber(603, l16);
mv.visitVarInsn(ALOAD, 4);
mv.visitVarInsn(ALOAD, 8);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z");
mv.visitInsn(POP);
mv.visitLabel(l10);
mv.visitLineNumber(598, l10);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 6);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z");
mv.visitJumpInsn(IFNE, l11);
Label l17 = new Label();
mv.visitLabel(l17);
mv.visitLineNumber(605, l17);
mv.visitVarInsn(ALOAD, 3);
mv.visitLdcInsn("cpu_infos_attributes");
mv.visitMethodInsn(INVOKESTATIC, "org/cerberus/profile/cpu/CpuDataList", "getInstance", "()Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitInsn(POP);
Label l18 = new Label();
mv.visitLabel(l18);
mv.visitLineNumber(607, l18);
mv.visitTypeInsn(NEW, "java/util/ArrayList");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "java/util/ArrayList", "<init>", "()V");
mv.visitVarInsn(ASTORE, 5);
Label l19 = new Label();
mv.visitLabel(l19);
mv.visitLineNumber(608, l19);
mv.visitMethodInsn(INVOKESTATIC, "org/cerberus/profile/memory/MemoryDataList", "getInstance", "()Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;");
mv.visitVarInsn(ASTORE, 7);
Label l20 = new Label();
mv.visitJumpInsn(GOTO, l20);
Label l21 = new Label();
mv.visitLabel(l21);
mv.visitFrame(Opcodes.F_FULL, 8, new Object[] {"org/cerberus/test/CerberusTestRunner", "com/google/gson/Gson", "java/lang/Long", "java/util/Map", "java/util/List", "java/util/List", Opcodes.TOP, "java/util/Iterator"}, 0, new Object[] {});
mv.visitVarInsn(ALOAD, 7);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;");
mv.visitVarInsn(ASTORE, 6);
Label l22 = new Label();
mv.visitLabel(l22);
mv.visitLineNumber(609, l22);
mv.visitVarInsn(ALOAD, 6);
mv.visitTypeInsn(CHECKCAST, "java/util/Map");
mv.visitVarInsn(ASTORE, 8);
Label l23 = new Label();
mv.visitLabel(l23);
mv.visitLineNumber(610, l23);
mv.visitTypeInsn(NEW, "java/util/HashMap");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "java/util/HashMap", "<init>", "()V");
mv.visitVarInsn(ASTORE, 9);
Label l24 = new Label();
mv.visitLabel(l24);
mv.visitLineNumber(612, l24);
mv.visitVarInsn(ALOAD, 9);
mv.visitLdcInsn("mem_total");
mv.visitVarInsn(ALOAD, 8);
mv.visitLdcInsn("mem_total");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "get", "(Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitInsn(POP);
Label l25 = new Label();
mv.visitLabel(l25);
mv.visitLineNumber(613, l25);
mv.visitVarInsn(ALOAD, 9);
mv.visitLdcInsn("dalvik_heap_alloc");
mv.visitVarInsn(ALOAD, 8);
mv.visitLdcInsn("dalvik_heap_alloc");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "get", "(Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitInsn(POP);
Label l26 = new Label();
mv.visitLabel(l26);
mv.visitLineNumber(614, l26);
mv.visitVarInsn(ALOAD, 9);
mv.visitLdcInsn("native_heap_size");
mv.visitVarInsn(ALOAD, 8);
mv.visitLdcInsn("native_heap_size");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "get", "(Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitInsn(POP);
Label l27 = new Label();
mv.visitLabel(l27);
mv.visitLineNumber(615, l27);
mv.visitVarInsn(ALOAD, 9);
mv.visitLdcInsn("dalvik_heap_size");
mv.visitVarInsn(ALOAD, 8);
mv.visitLdcInsn("dalvik_heap_size");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "get", "(Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitInsn(POP);
Label l28 = new Label();
mv.visitLabel(l28);
mv.visitLineNumber(616, l28);
mv.visitVarInsn(ALOAD, 9);
mv.visitLdcInsn("native_heap_alloc");
mv.visitVarInsn(ALOAD, 8);
mv.visitLdcInsn("native_heap_alloc");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "get", "(Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitInsn(POP);
Label l29 = new Label();
mv.visitLabel(l29);
mv.visitLineNumber(617, l29);
mv.visitVarInsn(ALOAD, 9);
mv.visitLdcInsn("mem_alloc");
mv.visitVarInsn(ALOAD, 8);
mv.visitLdcInsn("mem_alloc");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "get", "(Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitInsn(POP);
Label l30 = new Label();
mv.visitLabel(l30);
mv.visitLineNumber(618, l30);
mv.visitVarInsn(ALOAD, 9);
mv.visitLdcInsn("client_timestamp");
mv.visitVarInsn(ALOAD, 8);
mv.visitLdcInsn("client_timestamp");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "get", "(Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitInsn(POP);
Label l31 = new Label();
mv.visitLabel(l31);
mv.visitLineNumber(619, l31);
mv.visitVarInsn(ALOAD, 5);
mv.visitVarInsn(ALOAD, 9);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z");
mv.visitInsn(POP);
mv.visitLabel(l20);
mv.visitLineNumber(608, l20);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 7);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z");
mv.visitJumpInsn(IFNE, l21);
Label l32 = new Label();
mv.visitLabel(l32);
mv.visitLineNumber(621, l32);
mv.visitVarInsn(ALOAD, 3);
mv.visitLdcInsn("memory_infos_attributes");
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitInsn(POP);
Label l33 = new Label();
mv.visitLabel(l33);
mv.visitLineNumber(623, l33);
mv.visitTypeInsn(NEW, "java/util/ArrayList");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "java/util/ArrayList", "<init>", "()V");
mv.visitVarInsn(ASTORE, 6);
Label l34 = new Label();
mv.visitLabel(l34);
mv.visitLineNumber(624, l34);
mv.visitMethodInsn(INVOKESTATIC, "org/cerberus/event/collection/MotionCollector", "getInstance", "()Lorg/cerberus/scenario/MotionCollectionManager;");
mv.visitMethodInsn(INVOKEVIRTUAL, "org/cerberus/scenario/MotionCollectionManager", "getStream", "()Lorg/cerberus/scenario/AbstractMotionStream;");
mv.visitTypeInsn(CHECKCAST, "org/cerberus/scenario/NetworkMotionStream");
mv.visitMethodInsn(INVOKEVIRTUAL, "org/cerberus/scenario/NetworkMotionStream", "getMotionList", "()Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;");
mv.visitVarInsn(ASTORE, 8);
Label l35 = new Label();
mv.visitJumpInsn(GOTO, l35);
Label l36 = new Label();
mv.visitLabel(l36);
mv.visitFrame(Opcodes.F_FULL, 9, new Object[] {"org/cerberus/test/CerberusTestRunner", "com/google/gson/Gson", "java/lang/Long", "java/util/Map", "java/util/List", "java/util/List", "java/util/List", Opcodes.TOP, "java/util/Iterator"}, 0, new Object[] {});
mv.visitVarInsn(ALOAD, 8);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;");
mv.visitTypeInsn(CHECKCAST, "org/cerberus/scenario/MotionVO");
mv.visitVarInsn(ASTORE, 7);
Label l37 = new Label();
mv.visitLabel(l37);
mv.visitLineNumber(626, l37);
mv.visitTypeInsn(NEW, "java/util/HashMap");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "java/util/HashMap", "<init>", "()V");
mv.visitVarInsn(ASTORE, 9);
Label l38 = new Label();
mv.visitLabel(l38);
mv.visitLineNumber(628, l38);
mv.visitVarInsn(ALOAD, 9);
mv.visitLdcInsn("activity_class");
mv.visitVarInsn(ALOAD, 7);
mv.visitMethodInsn(INVOKEVIRTUAL, "org/cerberus/scenario/MotionVO", "getActivity_class", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitInsn(POP);
Label l39 = new Label();
mv.visitLabel(l39);
mv.visitLineNumber(629, l39);
mv.visitVarInsn(ALOAD, 9);
mv.visitLdcInsn("param");
mv.visitVarInsn(ALOAD, 7);
mv.visitMethodInsn(INVOKEVIRTUAL, "org/cerberus/scenario/MotionVO", "getParam", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitInsn(POP);
Label l40 = new Label();
mv.visitLabel(l40);
mv.visitLineNumber(630, l40);
mv.visitVarInsn(ALOAD, 9);
mv.visitLdcInsn("view");
mv.visitVarInsn(ALOAD, 7);
mv.visitMethodInsn(INVOKEVIRTUAL, "org/cerberus/scenario/MotionVO", "getView", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitInsn(POP);
Label l41 = new Label();
mv.visitLabel(l41);
mv.visitLineNumber(631, l41);
mv.visitVarInsn(ALOAD, 9);
mv.visitLdcInsn("sleep");
mv.visitVarInsn(ALOAD, 7);
mv.visitMethodInsn(INVOKEVIRTUAL, "org/cerberus/scenario/MotionVO", "getSleep", "()Ljava/lang/Long;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitInsn(POP);
Label l42 = new Label();
mv.visitLabel(l42);
mv.visitLineNumber(632, l42);
mv.visitVarInsn(ALOAD, 9);
mv.visitLdcInsn("action_type");
mv.visitVarInsn(ALOAD, 7);
mv.visitMethodInsn(INVOKEVIRTUAL, "org/cerberus/scenario/MotionVO", "getAction_type", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitInsn(POP);
Label l43 = new Label();
mv.visitLabel(l43);
mv.visitLineNumber(633, l43);
mv.visitVarInsn(ALOAD, 9);
mv.visitLdcInsn("client_timestamp");
mv.visitVarInsn(ALOAD, 7);
mv.visitMethodInsn(INVOKEVIRTUAL, "org/cerberus/scenario/MotionVO", "getTime_stamp", "()Ljava/lang/Long;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitInsn(POP);
Label l44 = new Label();
mv.visitLabel(l44);
mv.visitLineNumber(635, l44);
mv.visitVarInsn(ALOAD, 6);
mv.visitVarInsn(ALOAD, 9);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z");
mv.visitInsn(POP);
mv.visitLabel(l35);
mv.visitLineNumber(624, l35);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 8);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z");
mv.visitJumpInsn(IFNE, l36);
Label l45 = new Label();
mv.visitLabel(l45);
mv.visitLineNumber(638, l45);
mv.visitVarInsn(ALOAD, 3);
mv.visitLdcInsn("motion_event_infos_attributes");
mv.visitVarInsn(ALOAD, 6);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitInsn(POP);
Label l46 = new Label();
mv.visitLabel(l46);
mv.visitLineNumber(639, l46);
mv.visitVarInsn(ALOAD, 3);
mv.visitLdcInsn("app_version");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "version", "Ljava/lang/String;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitInsn(POP);
Label l47 = new Label();
mv.visitLabel(l47);
mv.visitLineNumber(640, l47);
mv.visitVarInsn(ALOAD, 3);
mv.visitLdcInsn("test_datetime");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "startDate", "Ljava/lang/Long;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitInsn(POP);
Label l48 = new Label();
mv.visitLabel(l48);
mv.visitLineNumber(641, l48);
mv.visitVarInsn(ALOAD, 3);
mv.visitLdcInsn("running_time");
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Long", "longValue", "()J");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "startDate", "Ljava/lang/Long;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Long", "longValue", "()J");
mv.visitInsn(LSUB);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Long", "valueOf", "(J)Ljava/lang/Long;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitInsn(POP);
Label l49 = new Label();
mv.visitLabel(l49);
mv.visitLineNumber(642, l49);
mv.visitVarInsn(ALOAD, 3);
mv.visitLdcInsn("device_key");
mv.visitFieldInsn(GETSTATIC, "org/cerberus/test/CerberusTestRunner", "serial", "Ljava/lang/String;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitInsn(POP);
Label l50 = new Label();
mv.visitLabel(l50);
mv.visitLineNumber(643, l50);
mv.visitVarInsn(ALOAD, 3);
mv.visitLdcInsn("test_scenario_id");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "totalScenarioId", "Ljava/lang/Integer;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitInsn(POP);
Label l51 = new Label();
mv.visitLabel(l51);
mv.visitLineNumber(644, l51);
mv.visitVarInsn(ALOAD, 3);
mv.visitLdcInsn("total_report_id");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "totalReportId", "Ljava/lang/Integer;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitInsn(POP);
Label l52 = new Label();
mv.visitLabel(l52);
mv.visitLineNumber(647, l52);
mv.visitMethodInsn(INVOKESTATIC, "org/cerberus/profile/crash/CrashDump", "getInstance", "()Ljava/util/Map;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "keySet", "()Ljava/util/Set;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Set", "size", "()I");
Label l53 = new Label();
mv.visitJumpInsn(IFEQ, l53);
Label l54 = new Label();
mv.visitLabel(l54);
mv.visitLineNumber(648, l54);
mv.visitVarInsn(ALOAD, 3);
mv.visitLdcInsn("status");
mv.visitInsn(ICONST_M1);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "valueOf", "(I)Ljava/lang/Integer;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitInsn(POP);
Label l55 = new Label();
mv.visitLabel(l55);
mv.visitLineNumber(650, l55);
mv.visitMethodInsn(INVOKESTATIC, "org/cerberus/profile/crash/CrashDump", "getInstance", "()Ljava/util/Map;");
mv.visitVarInsn(ASTORE, 7);
Label l56 = new Label();
mv.visitLabel(l56);
mv.visitLineNumber(651, l56);
mv.visitVarInsn(ALOAD, 7);
mv.visitLdcInsn("total_report_id");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "totalReportId", "Ljava/lang/Integer;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitInsn(POP);
Label l57 = new Label();
mv.visitLabel(l57);
mv.visitLineNumber(653, l57);
mv.visitVarInsn(ALOAD, 3);
mv.visitLdcInsn("crash");
mv.visitVarInsn(ALOAD, 7);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitInsn(POP);
Label l58 = new Label();
mv.visitLabel(l58);
mv.visitLineNumber(654, l58);
Label l59 = new Label();
mv.visitJumpInsn(GOTO, l59);
mv.visitLabel(l53);
mv.visitLineNumber(655, l53);
mv.visitFrame(Opcodes.F_FULL, 7, new Object[] {"org/cerberus/test/CerberusTestRunner", "com/google/gson/Gson", "java/lang/Long", "java/util/Map", "java/util/List", "java/util/List", "java/util/List"}, 0, new Object[] {});
mv.visitVarInsn(ALOAD, 3);
mv.visitLdcInsn("status");
mv.visitInsn(ICONST_1);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "valueOf", "(I)Ljava/lang/Integer;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
mv.visitInsn(POP);
mv.visitLabel(l59);
mv.visitLineNumber(664, l59);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
mv.visitInsn(DUP);
mv.visitLdcInsn("http://"+ip+":");
mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "(Ljava/lang/String;)V");
mv.visitFieldInsn(GETSTATIC, "org/cerberus/test/CerberusTestRunner", "SERVER_PORT", "Ljava/lang/Integer;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;");
mv.visitLdcInsn("/testSvr/ResultProfilingServlet");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;");
mv.visitVarInsn(ASTORE, 7);
Label l60 = new Label();
mv.visitLabel(l60);
mv.visitLineNumber(665, l60);
mv.visitTypeInsn(NEW, "org/apache/http/impl/client/DefaultHttpClient");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "org/apache/http/impl/client/DefaultHttpClient", "<init>", "()V");
mv.visitVarInsn(ASTORE, 8);
Label l61 = new Label();
mv.visitLabel(l61);
mv.visitLineNumber(667, l61);
mv.visitTypeInsn(NEW, "java/util/ArrayList");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "java/util/ArrayList", "<init>", "()V");
Label l62 = new Label();
mv.visitLabel(l62);
mv.visitLineNumber(666, l62);
mv.visitVarInsn(ASTORE, 9);
Label l63 = new Label();
mv.visitLabel(l63);
mv.visitLineNumber(668, l63);
mv.visitVarInsn(ALOAD, 9);
mv.visitTypeInsn(NEW, "org/apache/http/message/BasicNameValuePair");
mv.visitInsn(DUP);
mv.visitLdcInsn("data");
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/gson/Gson", "toJson", "(Ljava/lang/Object;)Ljava/lang/String;");
mv.visitMethodInsn(INVOKESPECIAL, "org/apache/http/message/BasicNameValuePair", "<init>", "(Ljava/lang/String;Ljava/lang/String;)V");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/ArrayList", "add", "(Ljava/lang/Object;)Z");
mv.visitInsn(POP);
Label l64 = new Label();
mv.visitLabel(l64);
mv.visitLineNumber(671, l64);
mv.visitTypeInsn(NEW, "org/apache/http/client/methods/HttpPost");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 7);
mv.visitMethodInsn(INVOKESPECIAL, "org/apache/http/client/methods/HttpPost", "<init>", "(Ljava/lang/String;)V");
mv.visitVarInsn(ASTORE, 10);
Label l65 = new Label();
mv.visitLabel(l65);
mv.visitLineNumber(673, l65);
mv.visitTypeInsn(NEW, "org/apache/http/client/entity/UrlEncodedFormEntity");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 9);
mv.visitLdcInsn("EUC-KR");
mv.visitMethodInsn(INVOKESPECIAL, "org/apache/http/client/entity/UrlEncodedFormEntity", "<init>", "(Ljava/util/List;Ljava/lang/String;)V");
Label l66 = new Label();
mv.visitLabel(l66);
mv.visitLineNumber(672, l66);
mv.visitVarInsn(ASTORE, 11);
Label l67 = new Label();
mv.visitLabel(l67);
mv.visitLineNumber(675, l67);
mv.visitVarInsn(ALOAD, 10);
mv.visitVarInsn(ALOAD, 11);
mv.visitMethodInsn(INVOKEVIRTUAL, "org/apache/http/client/methods/HttpPost", "setEntity", "(Lorg/apache/http/HttpEntity;)V");
Label l68 = new Label();
mv.visitLabel(l68);
mv.visitLineNumber(677, l68);
mv.visitVarInsn(ALOAD, 8);
mv.visitVarInsn(ALOAD, 10);
mv.visitMethodInsn(INVOKEINTERFACE, "org/apache/http/client/HttpClient", "execute", "(Lorg/apache/http/client/methods/HttpUriRequest;)Lorg/apache/http/HttpResponse;");
mv.visitVarInsn(ASTORE, 12);
Label l69 = new Label();
mv.visitLabel(l69);
mv.visitLineNumber(678, l69);
mv.visitVarInsn(ALOAD, 12);
mv.visitMethodInsn(INVOKEINTERFACE, "org/apache/http/HttpResponse", "getEntity", "()Lorg/apache/http/HttpEntity;");
mv.visitVarInsn(ASTORE, 13);
Label l70 = new Label();
mv.visitLabel(l70);
mv.visitLineNumber(679, l70);
mv.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
mv.visitVarInsn(ALOAD, 13);
mv.visitMethodInsn(INVOKESTATIC, "org/apache/http/util/EntityUtils", "toString", "(Lorg/apache/http/HttpEntity;)Ljava/lang/String;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V");
Label l71 = new Label();
mv.visitLabel(l71);
mv.visitLineNumber(681, l71);
mv.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
mv.visitLdcInsn("finish...");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V");
Label l72 = new Label();
mv.visitLabel(l72);
mv.visitLineNumber(685, l72);
mv.visitInsn(RETURN);
Label l73 = new Label();
mv.visitLabel(l73);
mv.visitLocalVariable("this", "Lorg/cerberus/test/CerberusTestRunner;", null, l0, l73, 0);
mv.visitLocalVariable("gson", "Lcom/google/gson/Gson;", null, l5, l73, 1);
mv.visitLocalVariable("finishDate", "Ljava/lang/Long;", null, l6, l73, 2);
mv.visitLocalVariable("resultData", "Ljava/util/Map;", null, l8, l73, 3);
mv.visitLocalVariable("cpuList", "Ljava/util/List;", null, l9, l73, 4);
mv.visitLocalVariable("obj", "Ljava/lang/Object;", null, l12, l10, 5);
mv.visitLocalVariable("map", "Ljava/util/Map;", null, l13, l10, 7);
mv.visitLocalVariable("newMap", "Ljava/util/Map;", null, l14, l10, 8);
mv.visitLocalVariable("memoryList", "Ljava/util/List;", null, l19, l73, 5);
mv.visitLocalVariable("obj", "Ljava/lang/Object;", null, l22, l20, 6);
mv.visitLocalVariable("memoryMap", "Ljava/util/Map;", null, l23, l20, 8);
mv.visitLocalVariable("newMap", "Ljava/util/Map;", null, l24, l20, 9);
mv.visitLocalVariable("motionList", "Ljava/util/List;", null, l34, l73, 6);
mv.visitLocalVariable("motion", "Lorg/cerberus/scenario/MotionVO;", null, l37, l35, 7);
mv.visitLocalVariable("motionMap", "Ljava/util/Map;", null, l38, l35, 9);
mv.visitLocalVariable("crashDump", "Ljava/util/Map;", null, l56, l58, 7);
mv.visitLocalVariable("url", "Ljava/lang/String;", null, l60, l73, 7);
mv.visitLocalVariable("client", "Lorg/apache/http/client/HttpClient;", null, l61, l73, 8);
mv.visitLocalVariable("nameValuePairs", "Ljava/util/ArrayList;", "Ljava/util/ArrayList<Lorg/apache/http/NameValuePair;>;", l63, l73, 9);
mv.visitLocalVariable("httpPost", "Lorg/apache/http/client/methods/HttpPost;", null, l65, l73, 10);
mv.visitLocalVariable("entityRequest", "Lorg/apache/http/client/entity/UrlEncodedFormEntity;", null, l67, l73, 11);
mv.visitLocalVariable("responsePost", "Lorg/apache/http/HttpResponse;", null, l69, l73, 12);
mv.visitLocalVariable("resEntity", "Lorg/apache/http/HttpEntity;", null, l70, l73, 13);
mv.visitMaxs(6, 14);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "takeScreenshot", "(Ljava/lang/String;)Ljava/lang/String;", null, null);
mv.visitCode();
Label l0 = new Label();
Label l1 = new Label();
Label l2 = new Label();
mv.visitTryCatchBlock(l0, l1, l2, "java/lang/Exception");
Label l3 = new Label();
mv.visitLabel(l3);
mv.visitLineNumber(692, l3);
mv.visitLdcInsn("");
mv.visitVarInsn(ASTORE, 2);
Label l4 = new Label();
mv.visitLabel(l4);
mv.visitLineNumber(696, l4);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner", "solo", "Lcom/robotium/solo/Solo;");
mv.visitMethodInsn(INVOKEVIRTUAL, "com/robotium/solo/Solo", "getCurrentActivity", "()Landroid/app/Activity;");
mv.visitMethodInsn(INVOKEVIRTUAL, "android/app/Activity", "getWindow", "()Landroid/view/Window;");
mv.visitMethodInsn(INVOKEVIRTUAL, "android/view/Window", "getDecorView", "()Landroid/view/View;");
mv.visitMethodInsn(INVOKEVIRTUAL, "android/view/View", "getRootView", "()Landroid/view/View;");
mv.visitVarInsn(ASTORE, 3);
Label l5 = new Label();
mv.visitLabel(l5);
mv.visitLineNumber(699, l5);
mv.visitVarInsn(ALOAD, 3);
mv.visitInsn(ICONST_1);
mv.visitMethodInsn(INVOKEVIRTUAL, "android/view/View", "setDrawingCacheEnabled", "(Z)V");
Label l6 = new Label();
mv.visitLabel(l6);
mv.visitLineNumber(700, l6);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "android/view/View", "buildDrawingCache", "()V");
Label l7 = new Label();
mv.visitLabel(l7);
mv.visitLineNumber(701, l7);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "android/view/View", "getDrawingCache", "()Landroid/graphics/Bitmap;");
mv.visitVarInsn(ASTORE, 4);
Label l8 = new Label();
mv.visitLabel(l8);
mv.visitLineNumber(703, l8);
mv.visitTypeInsn(NEW, "java/io/File");
mv.visitInsn(DUP);
mv.visitLdcInsn("/mnt/sdcard/Robotium-Screenshots/");
mv.visitMethodInsn(INVOKESPECIAL, "java/io/File", "<init>", "(Ljava/lang/String;)V");
mv.visitVarInsn(ASTORE, 5);
Label l9 = new Label();
mv.visitLabel(l9);
mv.visitLineNumber(704, l9);
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/File", "mkdirs", "()Z");
mv.visitInsn(POP);
Label l10 = new Label();
mv.visitLabel(l10);
mv.visitLineNumber(706, l10);
mv.visitVarInsn(ALOAD, 4);
Label l11 = new Label();
mv.visitJumpInsn(IFNULL, l11);
mv.visitLabel(l0);
mv.visitLineNumber(708, l0);
mv.visitTypeInsn(NEW, "java/io/File");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 5);
mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/String", "valueOf", "(Ljava/lang/Object;)Ljava/lang/String;");
mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "(Ljava/lang/String;)V");
mv.visitLdcInsn(".jpg");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKESPECIAL, "java/io/File", "<init>", "(Ljava/io/File;Ljava/lang/String;)V");
mv.visitVarInsn(ASTORE, 6);
Label l12 = new Label();
mv.visitLabel(l12);
mv.visitLineNumber(709, l12);
mv.visitVarInsn(ALOAD, 6);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/File", "getAbsolutePath", "()Ljava/lang/String;");
mv.visitVarInsn(ASTORE, 2);
Label l13 = new Label();
mv.visitLabel(l13);
mv.visitLineNumber(710, l13);
mv.visitTypeInsn(NEW, "java/io/FileOutputStream");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 6);
mv.visitMethodInsn(INVOKESPECIAL, "java/io/FileOutputStream", "<init>", "(Ljava/io/File;)V");
mv.visitVarInsn(ASTORE, 7);
Label l14 = new Label();
mv.visitLabel(l14);
mv.visitLineNumber(711, l14);
mv.visitVarInsn(ALOAD, 4);
mv.visitFieldInsn(GETSTATIC, "android/graphics/Bitmap$CompressFormat", "JPEG", "Landroid/graphics/Bitmap$CompressFormat;");
mv.visitIntInsn(BIPUSH, 100);
mv.visitVarInsn(ALOAD, 7);
mv.visitMethodInsn(INVOKEVIRTUAL, "android/graphics/Bitmap", "compress", "(Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z");
mv.visitInsn(POP);
Label l15 = new Label();
mv.visitLabel(l15);
mv.visitLineNumber(712, l15);
mv.visitVarInsn(ALOAD, 7);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/FileOutputStream", "close", "()V");
mv.visitLabel(l1);
mv.visitLineNumber(713, l1);
mv.visitJumpInsn(GOTO, l11);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_FULL, 6, new Object[] {"org/cerberus/test/CerberusTestRunner", "java/lang/String", "java/lang/String", "android/view/View", "android/graphics/Bitmap", "java/io/File"}, 1, new Object[] {"java/lang/Exception"});
mv.visitVarInsn(ASTORE, 6);
mv.visitLabel(l11);
mv.visitLineNumber(717, l11);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 2);
mv.visitInsn(ARETURN);
Label l16 = new Label();
mv.visitLabel(l16);
mv.visitLocalVariable("this", "Lorg/cerberus/test/CerberusTestRunner;", null, l3, l16, 0);
mv.visitLocalVariable("filename", "Ljava/lang/String;", null, l3, l16, 1);
mv.visitLocalVariable("result", "Ljava/lang/String;", null, l4, l16, 2);
mv.visitLocalVariable("view", "Landroid/view/View;", null, l5, l16, 3);
mv.visitLocalVariable("bitmap", "Landroid/graphics/Bitmap;", null, l8, l16, 4);
mv.visitLocalVariable("directory", "Ljava/io/File;", null, l9, l16, 5);
mv.visitLocalVariable("outputFile", "Ljava/io/File;", null, l12, l1, 6);
mv.visitLocalVariable("ostream", "Ljava/io/FileOutputStream;", null, l14, l1, 7);
mv.visitMaxs(6, 8);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "findView", "(Landroid/view/ViewGroup;I)Landroid/view/View;", null, null);
mv.visitCode();
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitLineNumber(723, l0);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 3);
Label l1 = new Label();
mv.visitLabel(l1);
Label l2 = new Label();
mv.visitJumpInsn(GOTO, l2);
Label l3 = new Label();
mv.visitLabel(l3);
mv.visitLineNumber(724, l3);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ILOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "android/view/ViewGroup", "getChildAt", "(I)Landroid/view/View;");
mv.visitMethodInsn(INVOKEVIRTUAL, "android/view/View", "getId", "()I");
mv.visitVarInsn(ILOAD, 2);
Label l4 = new Label();
mv.visitJumpInsn(IF_ICMPNE, l4);
Label l5 = new Label();
mv.visitLabel(l5);
mv.visitLineNumber(725, l5);
mv.visitLdcInsn("cerberusScanner");
mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKESTATIC, "android/util/Log", "d", "(Ljava/lang/String;Ljava/lang/String;)I");
mv.visitInsn(POP);
Label l6 = new Label();
mv.visitLabel(l6);
mv.visitLineNumber(726, l6);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ILOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "android/view/ViewGroup", "getChildAt", "(I)Landroid/view/View;");
mv.visitInsn(ARETURN);
mv.visitLabel(l4);
mv.visitLineNumber(729, l4);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ILOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "android/view/ViewGroup", "getChildAt", "(I)Landroid/view/View;");
mv.visitTypeInsn(INSTANCEOF, "android/view/ViewGroup");
Label l7 = new Label();
mv.visitJumpInsn(IFEQ, l7);
Label l8 = new Label();
mv.visitLabel(l8);
mv.visitLineNumber(730, l8);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ILOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "android/view/ViewGroup", "getChildAt", "(I)Landroid/view/View;");
mv.visitTypeInsn(CHECKCAST, "android/view/ViewGroup");
mv.visitVarInsn(ILOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "org/cerberus/test/CerberusTestRunner", "findView", "(Landroid/view/ViewGroup;I)Landroid/view/View;");
mv.visitVarInsn(ASTORE, 4);
Label l9 = new Label();
mv.visitLabel(l9);
mv.visitLineNumber(731, l9);
mv.visitVarInsn(ALOAD, 4);
mv.visitJumpInsn(IFNULL, l7);
Label l10 = new Label();
mv.visitLabel(l10);
mv.visitLineNumber(732, l10);
mv.visitLdcInsn("cerberusScanner");
mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKESTATIC, "android/util/Log", "d", "(Ljava/lang/String;Ljava/lang/String;)I");
mv.visitInsn(POP);
Label l11 = new Label();
mv.visitLabel(l11);
mv.visitLineNumber(733, l11);
mv.visitVarInsn(ALOAD, 4);
mv.visitInsn(ARETURN);
mv.visitLabel(l7);
mv.visitLineNumber(723, l7);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitIincInsn(3, 1);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ILOAD, 3);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "android/view/ViewGroup", "getChildCount", "()I");
mv.visitJumpInsn(IF_ICMPLT, l3);
Label l12 = new Label();
mv.visitLabel(l12);
mv.visitLineNumber(737, l12);
mv.visitInsn(ACONST_NULL);
mv.visitInsn(ARETURN);
Label l13 = new Label();
mv.visitLabel(l13);
mv.visitLocalVariable("this", "Lorg/cerberus/test/CerberusTestRunner;", null, l0, l13, 0);
mv.visitLocalVariable("v", "Landroid/view/ViewGroup;", null, l0, l13, 1);
mv.visitLocalVariable("id", "I", null, l0, l13, 2);
mv.visitLocalVariable("i", "I", null, l1, l12, 3);
mv.visitLocalVariable("result", "Landroid/view/View;", null, l9, l7, 4);
mv.visitMaxs(3, 5);
mv.visitEnd();
}
cw.visitEnd();































new File(path + "/temp/newclz/org/cerberus/test/").mkdirs();
byte[] b = cw.toByteArray();
FileOutputStream fos = new FileOutputStream(new File(path + "/temp/newclz/org/cerberus/test/CerberusTestRunner.class"));
fos.write(b);
fos.close();
		


//==========================================================================================================================

 cw = new ClassWriter(0);


cw.visit(V1_6, ACC_SUPER, "org/cerberus/test/CerberusTestRunner$1", null, "java/lang/Object", new String[] { "org/cerberus/scenario/MotionCollectionManager$MotionAddListener" });

cw.visitSource("CerberusTestRunner.java", null);

cw.visitOuterClass("org/cerberus/test/CerberusTestRunner", "setUp", "()V");

cw.visitInnerClass("org/cerberus/scenario/MotionCollectionManager$MotionAddListener", "org/cerberus/scenario/MotionCollectionManager", "MotionAddListener", ACC_PUBLIC + ACC_STATIC + ACC_ABSTRACT + ACC_INTERFACE);

cw.visitInnerClass("org/cerberus/test/CerberusTestRunner$1", null, null, 0);

cw.visitInnerClass("org/cerberus/test/CerberusTestRunner$1$1", null, null, 0);

{
fv = cw.visitField(ACC_PRIVATE + ACC_FINAL + ACC_STATIC, "IMAGE_SERVER_URL", "Ljava/lang/String;", null, "http://" + ip + ":8080/testSvr/ImageUploadServlet");
fv.visitEnd();
}
{
fv = cw.visitField(ACC_FINAL + ACC_SYNTHETIC, "this$0", "Lorg/cerberus/test/CerberusTestRunner;", null, null);
fv.visitEnd();
}
{
mv = cw.visitMethod(0, "<init>", "(Lorg/cerberus/test/CerberusTestRunner;)V", null, null);
mv.visitCode();
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitLineNumber(1, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(PUTFIELD, "org/cerberus/test/CerberusTestRunner$1", "this$0", "Lorg/cerberus/test/CerberusTestRunner;");
Label l1 = new Label();
mv.visitLabel(l1);
mv.visitLineNumber(151, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKESPECIAL, "java/lang/Object", "<init>", "()V");
mv.visitInsn(RETURN);
Label l2 = new Label();
mv.visitLabel(l2);
mv.visitLocalVariable("this", "Lorg/cerberus/test/CerberusTestRunner$1;", null, l0, l2, 0);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "addItem", "(Ljava/lang/Long;)V", null, null);
mv.visitCode();
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitLineNumber(159, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner$1", "this$0", "Lorg/cerberus/test/CerberusTestRunner;");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Long", "toString", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKEVIRTUAL, "org/cerberus/test/CerberusTestRunner", "takeScreenshot", "(Ljava/lang/String;)Ljava/lang/String;");
mv.visitVarInsn(ASTORE, 2);
Label l1 = new Label();
mv.visitLabel(l1);
mv.visitLineNumber(160, l1);
mv.visitTypeInsn(NEW, "java/io/File");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKESPECIAL, "java/io/File", "<init>", "(Ljava/lang/String;)V");
mv.visitVarInsn(ASTORE, 3);
Label l2 = new Label();
mv.visitLabel(l2);
mv.visitLineNumber(162, l2);
mv.visitTypeInsn(NEW, "org/cerberus/test/CerberusTestRunner$1$1");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKESPECIAL, "org/cerberus/test/CerberusTestRunner$1$1", "<init>", "(Lorg/cerberus/test/CerberusTestRunner$1;Ljava/lang/Long;Ljava/io/File;)V");
mv.visitInsn(ICONST_0);
mv.visitTypeInsn(ANEWARRAY, "java/lang/Object");
Label l3 = new Label();
mv.visitLabel(l3);
mv.visitLineNumber(191, l3);
mv.visitMethodInsn(INVOKEVIRTUAL, "org/cerberus/test/CerberusTestRunner$1$1", "execute", "([Ljava/lang/Object;)Landroid/os/AsyncTask;");
mv.visitInsn(POP);
Label l4 = new Label();
mv.visitLabel(l4);
mv.visitLineNumber(196, l4);
mv.visitInsn(RETURN);
Label l5 = new Label();
mv.visitLabel(l5);
mv.visitLocalVariable("this", "Lorg/cerberus/test/CerberusTestRunner$1;", null, l0, l5, 0);
mv.visitLocalVariable("timeStamp", "Ljava/lang/Long;", null, l0, l5, 1);
mv.visitLocalVariable("filePath", "Ljava/lang/String;", null, l1, l5, 2);
mv.visitLocalVariable("file", "Ljava/io/File;", null, l2, l5, 3);
mv.visitMaxs(5, 4);
mv.visitEnd();
}
cw.visitEnd();

 b = cw.toByteArray();
 fos = new FileOutputStream(new File(path + "/temp/newclz/org/cerberus/test/CerberusTestRunner$1.class"));
fos.write(b);
fos.close();
		

//==================================================================================================================================


 cw = new ClassWriter(0);


cw.visit(V1_6, ACC_SUPER, "org/cerberus/test/CerberusTestRunner$1$1", null, "android/os/AsyncTask", null);

cw.visitSource("CerberusTestRunner.java", null);

cw.visitOuterClass("org/cerberus/test/CerberusTestRunner$1", "addItem", "(Ljava/lang/Long;)V");

cw.visitInnerClass("org/cerberus/test/CerberusTestRunner$1", null, null, 0);

cw.visitInnerClass("org/cerberus/test/CerberusTestRunner$1$1", null, null, 0);

{
fv = cw.visitField(ACC_FINAL + ACC_SYNTHETIC, "this$1", "Lorg/cerberus/test/CerberusTestRunner$1;", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PRIVATE + ACC_FINAL + ACC_SYNTHETIC, "val$timeStamp", "Ljava/lang/Long;", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PRIVATE + ACC_FINAL + ACC_SYNTHETIC, "val$file", "Ljava/io/File;", null, null);
fv.visitEnd();
}
{
mv = cw.visitMethod(0, "<init>", "(Lorg/cerberus/test/CerberusTestRunner$1;Ljava/lang/Long;Ljava/io/File;)V", null, null);
mv.visitCode();
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitLineNumber(1, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(PUTFIELD, "org/cerberus/test/CerberusTestRunner$1$1", "this$1", "Lorg/cerberus/test/CerberusTestRunner$1;");
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(PUTFIELD, "org/cerberus/test/CerberusTestRunner$1$1", "val$timeStamp", "Ljava/lang/Long;");
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 3);
mv.visitFieldInsn(PUTFIELD, "org/cerberus/test/CerberusTestRunner$1$1", "val$file", "Ljava/io/File;");
Label l1 = new Label();
mv.visitLabel(l1);
mv.visitLineNumber(162, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKESPECIAL, "android/os/AsyncTask", "<init>", "()V");
mv.visitInsn(RETURN);
Label l2 = new Label();
mv.visitLabel(l2);
mv.visitLocalVariable("this", "Lorg/cerberus/test/CerberusTestRunner$1$1;", null, l0, l2, 0);
mv.visitMaxs(2, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PROTECTED + ACC_VARARGS, "doInBackground", "([Ljava/lang/Object;)Ljava/lang/Object;", null, null);
mv.visitCode();
Label l0 = new Label();
Label l1 = new Label();
Label l2 = new Label();
mv.visitTryCatchBlock(l0, l1, l2, "java/lang/Exception");
mv.visitLabel(l0);
mv.visitLineNumber(168, l0);
mv.visitTypeInsn(NEW, "org/apache/http/impl/client/DefaultHttpClient");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "org/apache/http/impl/client/DefaultHttpClient", "<init>", "()V");
mv.visitVarInsn(ASTORE, 2);
Label l3 = new Label();
mv.visitLabel(l3);
mv.visitLineNumber(169, l3);
mv.visitTypeInsn(NEW, "org/apache/http/client/methods/HttpPost");
mv.visitInsn(DUP);
mv.visitLdcInsn("http://" + ip + ":8080/testSvr/ImageUploadServlet");
mv.visitMethodInsn(INVOKESPECIAL, "org/apache/http/client/methods/HttpPost", "<init>", "(Ljava/lang/String;)V");
mv.visitVarInsn(ASTORE, 3);
Label l4 = new Label();
mv.visitLabel(l4);
mv.visitLineNumber(171, l4);
mv.visitMethodInsn(INVOKESTATIC, "org/apache/http/entity/mime/MultipartEntityBuilder", "create", "()Lorg/apache/http/entity/mime/MultipartEntityBuilder;");
mv.visitVarInsn(ASTORE, 4);
Label l5 = new Label();
mv.visitLabel(l5);
mv.visitLineNumber(172, l5);
mv.visitVarInsn(ALOAD, 4);
mv.visitFieldInsn(GETSTATIC, "org/apache/http/entity/mime/HttpMultipartMode", "BROWSER_COMPATIBLE", "Lorg/apache/http/entity/mime/HttpMultipartMode;");
mv.visitMethodInsn(INVOKEVIRTUAL, "org/apache/http/entity/mime/MultipartEntityBuilder", "setMode", "(Lorg/apache/http/entity/mime/HttpMultipartMode;)Lorg/apache/http/entity/mime/MultipartEntityBuilder;");
mv.visitInsn(POP);
Label l6 = new Label();
mv.visitLabel(l6);
mv.visitLineNumber(173, l6);
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("timestamp");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner$1$1", "val$timeStamp", "Ljava/lang/Long;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Long", "toString", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKEVIRTUAL, "org/apache/http/entity/mime/MultipartEntityBuilder", "addTextBody", "(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/http/entity/mime/MultipartEntityBuilder;");
mv.visitInsn(POP);
Label l7 = new Label();
mv.visitLabel(l7);
mv.visitLineNumber(174, l7);
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("deviceKey");
mv.visitFieldInsn(GETSTATIC, "org/cerberus/test/CerberusTestRunner", "serial", "Ljava/lang/String;");
mv.visitMethodInsn(INVOKEVIRTUAL, "org/apache/http/entity/mime/MultipartEntityBuilder", "addTextBody", "(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/http/entity/mime/MultipartEntityBuilder;");
mv.visitInsn(POP);
Label l8 = new Label();
mv.visitLabel(l8);
mv.visitLineNumber(175, l8);
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("file");
mv.visitTypeInsn(NEW, "org/apache/http/entity/mime/content/FileBody");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner$1$1", "val$file", "Ljava/io/File;");
mv.visitMethodInsn(INVOKESPECIAL, "org/apache/http/entity/mime/content/FileBody", "<init>", "(Ljava/io/File;)V");
mv.visitMethodInsn(INVOKEVIRTUAL, "org/apache/http/entity/mime/MultipartEntityBuilder", "addPart", "(Ljava/lang/String;Lorg/apache/http/entity/mime/content/ContentBody;)Lorg/apache/http/entity/mime/MultipartEntityBuilder;");
mv.visitInsn(POP);
Label l9 = new Label();
mv.visitLabel(l9);
mv.visitLineNumber(177, l9);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ALOAD, 4);
mv.visitMethodInsn(INVOKEVIRTUAL, "org/apache/http/entity/mime/MultipartEntityBuilder", "build", "()Lorg/apache/http/HttpEntity;");
mv.visitMethodInsn(INVOKEVIRTUAL, "org/apache/http/client/methods/HttpPost", "setEntity", "(Lorg/apache/http/HttpEntity;)V");
Label l10 = new Label();
mv.visitLabel(l10);
mv.visitLineNumber(179, l10);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEINTERFACE, "org/apache/http/client/HttpClient", "execute", "(Lorg/apache/http/client/methods/HttpUriRequest;)Lorg/apache/http/HttpResponse;");
mv.visitVarInsn(ASTORE, 5);
mv.visitLabel(l1);
mv.visitLineNumber(180, l1);
Label l11 = new Label();
mv.visitJumpInsn(GOTO, l11);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Exception"});
mv.visitVarInsn(ASTORE, 2);
Label l12 = new Label();
mv.visitLabel(l12);
mv.visitLineNumber(181, l12);
mv.visitLdcInsn("cerberus");
mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Exception", "getMessage", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKESTATIC, "java/lang/String", "valueOf", "(Ljava/lang/Object;)Ljava/lang/String;");
mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "(Ljava/lang/String;)V");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;");
mv.visitMethodInsn(INVOKESTATIC, "android/util/Log", "e", "(Ljava/lang/String;Ljava/lang/String;)I");
mv.visitInsn(POP);
Label l13 = new Label();
mv.visitLabel(l13);
mv.visitLineNumber(182, l13);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Exception", "printStackTrace", "()V");
mv.visitLabel(l11);
mv.visitLineNumber(185, l11);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "org/cerberus/test/CerberusTestRunner$1$1", "val$file", "Ljava/io/File;");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/File", "delete", "()Z");
mv.visitInsn(POP);
Label l14 = new Label();
mv.visitLabel(l14);
mv.visitLineNumber(187, l14);
mv.visitInsn(ACONST_NULL);
mv.visitInsn(ARETURN);
Label l15 = new Label();
mv.visitLabel(l15);
mv.visitLocalVariable("this", "Lorg/cerberus/test/CerberusTestRunner$1$1;", null, l0, l15, 0);
mv.visitLocalVariable("params", "[Ljava/lang/Object;", null, l0, l15, 1);
mv.visitLocalVariable("httpClient", "Lorg/apache/http/client/HttpClient;", null, l3, l1, 2);
mv.visitLocalVariable("httpPost", "Lorg/apache/http/client/methods/HttpPost;", null, l4, l1, 3);
mv.visitLocalVariable("meb", "Lorg/apache/http/entity/mime/MultipartEntityBuilder;", null, l5, l1, 4);
mv.visitLocalVariable("e", "Ljava/lang/Exception;", null, l12, l11, 2);
mv.visitMaxs(5, 6);
mv.visitEnd();
}
cw.visitEnd();


   b = cw.toByteArray();
 fos = new FileOutputStream(new File(path + "/temp/newclz/org/cerberus/test/CerberusTestRunner$1$1.class"));
fos.write(b);
fos.close();
		





//------------------------------------------

cw = new ClassWriter(0);

cw.visit(V1_6, ACC_SUPER, "org/cerberus/test/CerberusTestRunner$2", null, "android/os/AsyncTask", null);

cw.visitSource("CerberusTestRunner.java", null);

cw.visitOuterClass("org/cerberus/test/CerberusTestRunner", "testRun", "()V");

cw.visitInnerClass("org/cerberus/test/CerberusTestRunner$2", null, null, 0);

{
fv = cw.visitField(ACC_FINAL + ACC_SYNTHETIC, "this$0", "Lorg/cerberus/test/CerberusTestRunner;", null, null);
fv.visitEnd();
}
{
mv = cw.visitMethod(0, "<init>", "(Lorg/cerberus/test/CerberusTestRunner;)V", null, null);
mv.visitCode();
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitLineNumber(1, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(PUTFIELD, "org/cerberus/test/CerberusTestRunner$2", "this$0", "Lorg/cerberus/test/CerberusTestRunner;");
Label l1 = new Label();
mv.visitLabel(l1);
mv.visitLineNumber(323, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKESPECIAL, "android/os/AsyncTask", "<init>", "()V");
mv.visitInsn(RETURN);
Label l2 = new Label();
mv.visitLabel(l2);
mv.visitLocalVariable("this", "Lorg/cerberus/test/CerberusTestRunner$2;", null, l0, l2, 0);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PROTECTED + ACC_VARARGS, "doInBackground", "([Ljava/lang/Object;)Ljava/lang/Object;", null, null);
mv.visitCode();
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitLineNumber(328, l0);
mv.visitVarInsn(ALOAD, 1);
mv.visitInsn(ICONST_0);
mv.visitInsn(AALOAD);
mv.visitInsn(ARETURN);
Label l1 = new Label();
mv.visitLabel(l1);
mv.visitLocalVariable("this", "Lorg/cerberus/test/CerberusTestRunner$2;", null, l0, l1, 0);
mv.visitLocalVariable("params", "[Ljava/lang/Object;", null, l0, l1, 1);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PROTECTED, "onPostExecute", "(Ljava/lang/Object;)V", null, null);
mv.visitCode();
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitLineNumber(348, l0);
mv.visitInsn(RETURN);
Label l1 = new Label();
mv.visitLabel(l1);
mv.visitLocalVariable("this", "Lorg/cerberus/test/CerberusTestRunner$2;", null, l0, l1, 0);
mv.visitLocalVariable("result", "Ljava/lang/Object;", null, l0, l1, 1);
mv.visitMaxs(0, 2);
mv.visitEnd();
}
cw.visitEnd();




b = cw.toByteArray();
fos = new FileOutputStream(new File(path + "/temp/newclz/org/cerberus/test/CerberusTestRunner$2.class"));
fos.write(b);
fos.close();
		

	}
	
}
